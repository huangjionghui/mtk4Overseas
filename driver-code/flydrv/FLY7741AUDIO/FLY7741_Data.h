#pragma once

#ifndef __SAF7741_DATA_H__
#define __SAF7741_DATA_H__

#ifdef __cplusplus
extern "C"
{
#endif

//BYTE SAF7741_Init_Data[]={
////INFO: Console cleared, Start Initialising......
//
//0x38, 5, 0x0D, 0x10, 0x6C, 0x00, 0x00,//YA_Mute_P
//0x38, 5, 0x0D, 0x10, 0x6D, 0x00, 0x00,//YA_Mute_S
//0x38, 5, 0x0D, 0x10, 0x6F, 0x00, 0x00,//YA_Mute_T
//0x38, 5, 0x0D, 0x10, 0x6E, 0x00, 0x00,//YA_Mute_N
//
////INFO: Initialise Main module.....
//
//0x38, 5, 0x00, 0x00, 0x50, 0x06, 0x0E,//IIC_CLK_EN     
//0x38, 6, 0x00, 0x00, 0x20, 0x02, 0x00, 0x06,//IIC_CLKPLL_CTR
//0x38, 6, 0x00, 0x00, 0x20, 0x02, 0x0C, 0xC6,//IIC_CLKPLL_CTR
//0x38, 5, 0x00, 0x00, 0x50, 0x07, 0xFE,//IIC_CLK_EN
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x0D, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_ADSP_START_ADDR
////（start address for the ADSP after releasing its‘pc_reset’  bit）
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01,//IIC_DSP_CTR
//0x38, 6, 0x01, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_TDSP1_START_ADDR
////（start address for the TDSP1 after releasing its‘pc_reset’  bit）
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x40,//IIC_DSP_CTR
//0x38, 6, 0x03, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_TDSP1E_START_ADDR
////（start address for the TDSP1E after releasing its‘pc_reset’  bit）
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08,//IIC_DSP_CTR
//0x38, 6, 0x05, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_TDSP2_START_ADDR
////（start address for the TDSP2 after releasing its‘pc_reset’  bit）
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x09, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_SDSP_START_ADDR
////（start address for the SDSP after releasing its‘pc_reset’  bit）
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00,//IIC_DSP_CTR
//0x38, 6, 0x09, 0x0F, 0xFD, 0x00, 0x00, 0x00,//IIC_SDSP_START_ADDR
//0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
//
//0x38, 5, 0x03, 0x10, 0x0D, 0x00, 0x00,//(Clear after reset)
//
//0x38, 5, 0x00, 0x00, 0x40, 0x0B, 0x20,//IIC_APD_CTRL1
//0x38, 5, 0x00, 0x00, 0x41, 0x01, 0xC0,//IIC_APD_CTRL2
//0x38, 5, 0x00, 0x00, 0x50, 0x07, 0xFE,//IIC_CLK_EN
//
//0x38, 6, 0x09, 0x01, 0xFB, 0x80, 0x00, 0x00,//XS_CtrlTS1 (Enable Src1)
//0x38, 6, 0x09, 0x01, 0xFC, 0x80, 0x00, 0x00,//XS_CtrlTS2 (Enable Src2)
//0x38, 6, 0x09, 0x01, 0xFD, 0x80, 0x00, 0x00,//XS_CtrlTS3 (Enable Src3)
//0x38, 6, 0x09, 0x01, 0xFE, 0x80, 0x00, 0x00,//XS_CtrlTS4 (Enable Src4)
//0x38, 6, 0x09, 0x01, 0xFF, 0x80, 0x00, 0x00,//XS_CtrlTS5 (Enable Src5)
//
////ERROR: Not able to check the ADSP on initialisation, possibly I/O Expander 3 disabled
//
//0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR (IIS_IO_Control new default)
//
////INFO: Start initialising all audio features
////INFO: Sending KeyCodes for audio features........
//
////（write value #000001 to X: KeyCode to start the ADSP software program）  
//0x38, 6, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x01,//XA_KeyCode (KickOff the ADSP)
//0x38, 6, 0x01, 0x00, 0x08, 0x00, 0x00, 0x01,//TDSP Data Memory
//
////（CD-A on Primary  #000019  CD_A on AD12,  AD12 on Primary）
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x19,//XA_EasyP_Index (ADSP_EASYP_SrcSw_AIN0onA)
//0x38, 5, 0x0D, 0x10, 0x2C, 0x04, 0x00,//YA_Vol_SrcScalP
////（Aux on Secondary  #000022  Aux on AD34,  AD34 on Secondary）
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x22,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x85, 0x04, 0x00,//YA_Vol_SrcScalS
//0x38, 6, 0x0D, 0x03, 0xDC, 0x00, 0x00, 0xE9,//XA_Sup_ExtInPntr
//0x38, 6, 0x0D, 0x00, 0x61, 0x00, 0x09, 0x92,//XA_SrcSw_AIN1ADInSelOrMask
//0x38, 6, 0x0D, 0x00, 0x60, 0x00, 0x24, 0xC0,//XA_SrcSw_AIN0ADInSelOrMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x19,//XA_EasyP_Index (ADSP_EASYP_SrcSw_AIN0onA)
//0x38, 5, 0x0D, 0x10, 0x2C, 0x04, 0x00,//YA_Vol_SrcScalP
//0x38, 6, 0x0D, 0x00, 0x63, 0x00, 0x00, 0x64,//XA_SrcSw_AIN3ADInSelOrMask
//0x38, 6, 0x0D, 0x00, 0x64, 0x00, 0x36, 0x80,//XA_SrcSw_AIN4ADInSelOrMask
//0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR
////0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR
//0x38, 6, 0x00, 0x00, 0x20, 0x02, 0x0C, 0xC6,//IIC_CLKPLL_CTR
//0x38, 6, 0x0D, 0x01, 0xAF, 0x00, 0x00, 0x9C,//XA_FDACpntr
//0x38, 6, 0x0D, 0x01, 0xB0, 0x00, 0x00, 0x9E,//XA_RDACpntr
//0x38, 6, 0x0D, 0x01, 0xAA, 0x00, 0x00, 0x9C,//XA_HIIS1Outpntr
//0x38, 6, 0x0D, 0x01, 0xAB, 0x00, 0x00, 0x9C,//XA_HIIS2Outpntr
//0x38, 6, 0x0D, 0x01, 0xAC, 0x00, 0x00, 0x9C,//XA_HIIS3Outpntr
//0x38, 6, 0x0D, 0x01, 0xAD, 0x00, 0x00, 0x9C,//XA_HIIS4Outpntr
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x48,//XA_EasyP_Index
//0x38, 6, 0x0D, 0x04, 0x0E, 0x00, 0x00, 0x6D,//XA_SrcScal6_F_InPntr
//0x38, 6, 0x0D, 0x04, 0x0F, 0x00, 0x00, 0x6F,//XA_SrcScal6_R_InPntr
//0x38, 6, 0x0D, 0x04, 0x10, 0x00, 0x00, 0x71,//XA_SrcScal6_C_InPntr
//0x38, 6, 0x0D, 0x04, 0x11, 0x00, 0x00, 0x73,//XA_SrcScal6_Sw_InPntr
//
//0x38, 6, 0x0D, 0x00, 0x34, 0x10, 0x00, 0xD9,//XA_Vol_OneOverMaxBoostP
//
//0x38, 5, 0x0D, 0x10, 0x33, 0x03, 0xF9,//YA_Vol_UpScalF
//0x38, 5, 0x0D, 0x10, 0x34, 0x06, 0x48,//YA_Vol_UpScalR
//0x38, 5, 0x0D, 0x10, 0x35, 0x03, 0xF7,//YA_Vol_UpScalSwL
//0x38, 5, 0x0D, 0x10, 0x36, 0x04, 0xFD,//YA_Vol_UpScalSwR
//
//0x38, 6, 0x0D, 0x00, 0x37, 0x20, 0x01, 0x22,//XA_Vol_OneOverMaxBoostS
//
//0x38, 5, 0x0D, 0x10, 0x2E, 0x06, 0x5B,//YA_Vol_ScalF
//0x38, 5, 0x0D, 0x10, 0x2F, 0x05, 0x0C,//YA_Vol_ScalR
//0x38, 5, 0x0D, 0x10, 0x30, 0x07, 0xFF,//YA_Vol_ScalSwL
//0x38, 5, 0x0D, 0x10, 0x31, 0x07, 0xFF,//YA_Vol_ScalSwR
//0x38, 5, 0x0D, 0x10, 0x32, 0x07, 0xFF,//YA_Vol_ScalS
//0x38, 5, 0x0D, 0x10, 0x37, 0x01, 0x94,//YA_Vol_UpScalS
//
////INFO: Initialise 2 channel standard mode
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x4A,//XA_EasyP_Index
//
////INFO: Init the compressor expander in 2 channel mode.....
//
//0x38, 5, 0x0D, 0x10, 0xBC, 0x00, 0x00,//YA_CompExp_ExpL
//0x38, 6, 0x0D, 0x02, 0xBA, 0x80, 0x00, 0x00,//XA_CompExp_switch
//0x38, 5, 0x0D, 0x10, 0xBE, 0x00, 0x1D,//YA_CompExp_a0a
//0x38, 5, 0x0D, 0x10, 0xBF, 0x00, 0x1D,//YA_CompExp_a1a
//0x38, 5, 0x0D, 0x10, 0xBD, 0x07, 0xC6,//YA_CompExp_b1a
//0x38, 7, 0x0D, 0x10, 0xAE, 0x05, 0x96, 0x07, 0xFF,//YA_CompExp_b1dL（4 Bytes）
//0x38, 7, 0x0D, 0x10, 0xAC, 0x02, 0x6A, 0x00, 0x00,//YA_CompExp_a0dL（4 Bytes）
//
////INFO: Enable the graphic equaliser in 2 channel mode
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0xD4,//XA_EasyP_Index
//
////INFO: Enable additional 4 bands for the graphic equaliser(默认只有5段EQ，可通过软件激活另外4段EQ)
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x86,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x13, 0x00, 0x03, 0x02, 0x26, 0x0C, 0x07, 0x05, 0x6F, 0x07, 0xF8, 0x00, 0x3E,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xA0,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xA7,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xAE,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x37, 0x0C, 0x6E, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xB5,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x04,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xB9,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x04,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xBF,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xC8, 0x00, 0xBE, 0x01, 0x8F, 0x0D, 0x7C, 0x03, 0x94, 0x05, 0xD9, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xC6,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x41, 0x0E, 0x81, 0x03, 0x5D, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xCD,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x04,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x22, 0x00, 0x43, 0x0D, 0x91, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xD1,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x04,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x79, 0x07, 0x21,//YA_Vol_DesScalGEq
//
//0x38, 6, 0x0D, 0x02, 0xB8, 0x00, 0x00, 0xA8,//XA_Loudf_LevInPntr
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0xB0,//XA_EasyP_Index
//0x38, 13, 0x0D, 0x10, 0x00, 0x02, 0x21, 0x0E, 0xE8, 0x01, 0x74, 0x00, 0x00, 0x0E, 0x8C,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xF2,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x05,//XA_EasyP_Index
//0x38, 19, 0x0D, 0x10, 0x00, 0x04, 0x1D, 0x03, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE3, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0xEA,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x08,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x13, 0x01, 0x00, 0xFF,//YA_Loudf_MaxBstB 
//0x38, 5, 0x0D, 0x13, 0x08, 0x01, 0x2B,//YA_Loudf_MaxBstT
//0x38, 5, 0x0D, 0x12, 0xFB, 0x00, 0x20,//YA_Loudf_OffsB
//0x38, 5, 0x0D, 0x13, 0x02, 0x00, 0x10,//YA_Loudf_OffsT
//0x38, 6, 0x0D, 0x02, 0xAB, 0x00, 0x00, 0x00,//XA_Loudf_DynSwtch
//0x38, 5, 0x0D, 0x12, 0xFA, 0x07, 0xFF,//YA_Loudf_StatLev
//0x38, 5, 0x0D, 0x12, 0xF9, 0x07, 0xFF,//YA_Loudf_StatLevT
//0x38, 7, 0x0D, 0x12, 0xFD, 0x02, 0xB6, 0x08, 0x09,//YA_Loudf_KpBL
//0x38, 7, 0x0D, 0x12, 0xFF, 0x02, 0x73, 0x00, 0x12,//YA_Loudf_KmBL
//0x38, 7, 0x0D, 0x13, 0x04, 0x02, 0xB6, 0x08, 0x09,//YA_Loudf_KpTL
//0x38, 7, 0x0D, 0x13, 0x06, 0x02, 0x73, 0x00, 0x12,//YA_Loudf_KmTL
//0x38, 5, 0x0D, 0x13, 0x0F, 0x04, 0x00,//YA_Loudf_GchanCorrect
//0x38, 6, 0x0D, 0x02, 0xB1, 0x00, 0x56, 0x22,//XA_Loudf_HldThrshB
//0x38, 6, 0x0D, 0x02, 0xB6, 0x00, 0x56, 0x22,//XA_Loudf_HldThrshT
//
////INFO: Ultrabass is Disabled
//
//0x38, 6, 0x0D, 0x01, 0x9E, 0x00, 0x00, 0x00,//XA_AUB2_Mode
//
////INFO: Connect Delay Input pointers to Loudness outputs
//
//0x38, 6, 0x0D, 0x03, 0xC6, 0x00, 0x00, 0xC0,//XA_FInPntr
//0x38, 6, 0x0D, 0x03, 0xC7, 0x00, 0x00, 0xC0,//XA_RInPntr
//0x38, 6, 0x0D, 0x03, 0xD3, 0x00, 0x00, 0xC0,//XA_SwFInPntr
//0x38, 6, 0x0D, 0x03, 0xD4, 0x00, 0x00, 0xC0,//XA_SwRInPntr
//
////INFO: Disable Soft Clipping function
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0xC6,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x38, 0x08, 0x00,//YA_Vol_ScalBstP
//
////INFO: Disable Soft DownMixing function
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0xCE,//XA_EasyP_Index
//0x38, 6, 0x0D, 0x03, 0xD5, 0x00, 0x00, 0x94,//XA_FSupInPntr
//0x38, 6, 0x0D, 0x03, 0xD6, 0x00, 0x00, 0x96,//XA_RSupInPntr
//0x38, 6, 0x0D, 0x03, 0xD7, 0x00, 0x00, 0x98,//XA_SwSupInPntr
//
////INFO: 2 Channel mode initialised
//
//0x38, 5, 0x0D, 0x10, 0x4F, 0x08, 0x00,//YA_Vol_Main1P
//0x38, 5, 0x0D, 0x10, 0x50, 0x01, 0x45,//YA_Vol_Main2P
//0x38, 5, 0x0D, 0x10, 0x51, 0x08, 0x00,//YA_Vol_Main1S
//0x38, 5, 0x0D, 0x10, 0x52, 0x01, 0x45,//YA_Vol_Main2S
//0x38, 5, 0x0D, 0x10, 0x4E, 0x0D, 0xC0,//YA_Vol_Phon
//0x38, 5, 0x0D, 0x10, 0x4D, 0x0D, 0xC0,//YA_Vol_Nav
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0xCA,//XA_EasyP_Index
//
//0x38, 5, 0x0D, 0x10, 0xC6, 0x0F, 0xFF,//YA_Sup_TonFL
//0x38, 5, 0x0D, 0x10, 0xC7, 0x0F, 0xFF,//YA_Sup_TonFR
//0x38, 5, 0x0D, 0x10, 0xC8, 0x0F, 0xFF,//YA_Sup_TonRL
//0x38, 5, 0x0D, 0x10, 0xC9, 0x0F, 0xFF,//YA_Sup_TonRR
//0x38, 5, 0x0D, 0x10, 0xCA, 0x0F, 0xFF,//YA_Sup_TonSW
//
//0x38, 5, 0x0D, 0x10, 0xC1, 0x0F, 0xFF,//YA_Sup_NonFL
//0x38, 5, 0x0D, 0x10, 0xC2, 0x0F, 0xFF,//YA_Sup_NonFR
//0x38, 5, 0x0D, 0x10, 0xC5, 0x0F, 0xFF,//YA_Sup_NonSW
//0x38, 5, 0x0D, 0x10, 0xD4, 0x0F, 0xFF,//YA_Sup_ChionFL
//0x38, 5, 0x0D, 0x10, 0xD5, 0x0F, 0xFF,//YA_Sup_ChionFR
//0x38, 5, 0x0D, 0x10, 0xD6, 0x0F, 0xFF,//YA_Sup_ChionRL
//0x38, 5, 0x0D, 0x10, 0xD7, 0x0F, 0xFF,//YA_Sup_ChionRR
//0x38, 5, 0x0D, 0x10, 0xDA, 0x0F, 0xFF,//YA_Sup_ChionSL
//0x38, 5, 0x0D, 0x10, 0xDB, 0x0F, 0xFF,//YA_Sup_ChionSR
//0x38, 5, 0x0D, 0x10, 0xD8, 0x0F, 0xFF,//YA_Sup_ChionSW
//
//0x38, 5, 0x0D, 0x10, 0xCC, 0x0F, 0xFF,//YA_Sup_ExtonFL
//0x38, 5, 0x0D, 0x10, 0xCD, 0x0F, 0xFF,//YA_Sup_ExtonFR
//0x38, 5, 0x0D, 0x10, 0xCE, 0x0F, 0xFF,//YA_Sup_ExtonRL
//0x38, 5, 0x0D, 0x10, 0xCF, 0x0F, 0xFF,//YA_Sup_ExtonRR
//0x38, 5, 0x0D, 0x10, 0xD0, 0x0F, 0xFF,//YA_Sup_ExtonSW
//0x38, 5, 0x0D, 0x10, 0xCB, 0x0F, 0xFF,//YA_Sup_TonSwR
//0x38, 5, 0x0D, 0x10, 0xD1, 0x0F, 0xFF,//YA_Sup_ExtonSwR
//0x38, 5, 0x0D, 0x10, 0xD2, 0x0F, 0xFF,//YA_Sup_ExtonSL
//0x38, 5, 0x0D, 0x10, 0xD3, 0x0F, 0xFF,//YA_Sup_ExtonSR
//0x38, 5, 0x0D, 0x10, 0xD9, 0x0F, 0xFF,//YA_Sup_ChionSwR
//0x38, 5, 0x0D, 0x10, 0xC3, 0x0F, 0xFF,//YA_Sup_NonRL
//0x38, 5, 0x0D, 0x10, 0xC4, 0x0F, 0xFF,//YA_Sup_NonRR
//
//0x38, 5, 0x0D, 0x10, 0xE4, 0x0F, 0xFF,//YA_Sup_PDC2onFL
//0x38, 5, 0x0D, 0x10, 0xE5, 0x0F, 0xFF,//YA_Sup_PDC2onFR
//0x38, 5, 0x0D, 0x10, 0xE6, 0x0F, 0xFF,//YA_Sup_PDC2onRL
//0x38, 5, 0x0D, 0x10, 0xE7, 0x0F, 0xFF,//YA_Sup_PDC2onRR
//0x38, 5, 0x0D, 0x10, 0xE8, 0x07, 0xFA,//YA_Sup_Filta
//0x38, 5, 0x0D, 0x10, 0xE9, 0x00, 0x06,//YA_Sup_Filtb
//
//0x38, 5, 0x0D, 0x10, 0x55, 0x04, 0x00,//YA_Vol_ChanGainPFL
//0x38, 5, 0x0D, 0x10, 0x56, 0x04, 0x00,//YA_Vol_ChanGainPFR
//0x38, 5, 0x0D, 0x10, 0x57, 0x03, 0x2F,//YA_Vol_ChanGainPRL
//0x38, 5, 0x0D, 0x10, 0x58, 0x03, 0x2F,//YA_Vol_ChanGainPRR
//0x38, 5, 0x0D, 0x10, 0x59, 0x03, 0x2F,//YA_Vol_ChanGainSwL
//0x38, 5, 0x0D, 0x10, 0x5A, 0x02, 0x88,//YA_Vol_ChanGainSwR
//0x38, 5, 0x0D, 0x10, 0x5B, 0x04, 0x00,//YA_Vol_ChanGainSL
//0x38, 5, 0x0D, 0x10, 0x5C, 0x04, 0x00,//YA_Vol_ChanGainSR
//
//0x38, 6, 0x0D, 0x00, 0x31, 0x00, 0x00, 0x00,//XA_Vol_Boost12Db
//
//0x38, 5, 0x0D, 0x10, 0x24, 0x08, 0x00,//YA_Vol_BalPL
//0x38, 5, 0x0D, 0x10, 0x25, 0x08, 0x00,//YA_Vol_BalPR
//0x38, 5, 0x0D, 0x10, 0x2A, 0x08, 0x00,//YA_Vol_BalSL
//0x38, 5, 0x0D, 0x10, 0x2B, 0x08, 0x00,//YA_Vol_BalSR
//0x38, 5, 0x0D, 0x10, 0x28, 0x08, 0x00,//YA_Vol_BalSwL
//0x38, 5, 0x0D, 0x10, 0x29, 0x08, 0x00,//YA_Vol_BalSwR
//0x38, 5, 0x0D, 0x10, 0x22, 0x08, 0x00,//YA_Vol_FadF
//0x38, 5, 0x0D, 0x10, 0x23, 0x08, 0x00,//YA_Vol_FadR
//0x38, 5, 0x0D, 0x10, 0x26, 0x08, 0x00,//YA_Vol_FadSwL
//0x38, 5, 0x0D, 0x10, 0x27, 0x08, 0x00,//YA_Vol_FadSwR
//0x38, 5, 0x0D, 0x10, 0x2C, 0x04, 0x00,//YA_Vol_SrcScalP
//0x38, 5, 0x0D, 0x10, 0x85, 0x04, 0x00,//YA_Vol_SrcScalS
//
//0x38, 25, 0x0D, 0x10, 0x00, 0x03, 0xED, 0x07, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（22 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x1A,//XA_SrcSw_OrDigSrcSelMask 
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0B,//XA_EasyP_Index                
//0x38, 25, 0x0D, 0x10, 0x00, 0x03, 0xED, 0x07, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（22 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x37,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0B,//XA_EasyP_Index  
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x12,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x2F,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（12 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x25,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x06,//XA_EasyP_Index
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（12 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x42,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x06,//XA_EasyP_Index
//0x38, 5, 0x0D, 0x10, 0x7E, 0x08, 0x00,//YA_Vol_SignFL
//0x38, 5, 0x0D, 0x10, 0x7F, 0x08, 0x00,//YA_Vol_SignFR
//0x38, 5, 0x0D, 0x10, 0x80, 0x08, 0x00,//YA_Vol_SignRL
//0x38, 5, 0x0D, 0x10, 0x81, 0x08, 0x00,//YA_Vol_SignRR
//0x38, 5, 0x0D, 0x10, 0x82, 0x08, 0x00,//YA_Vol_SignSwL
//0x38, 5, 0x0D, 0x10, 0x83, 0x08, 0x00,//YA_Vol_SignSwR
//
//0x38, 6, 0x0D, 0x00, 0x46, 0x00, 0x00, 0x00,//XA_Mute_StpAttDac
//0x38, 6, 0x0D, 0x00, 0x47, 0x00, 0x00, 0x00,//XA_Mute_StpRelDac
//
//0x38, 6, 0x0D, 0x03, 0xFF, 0x00, 0x00, 0x00,//XA_QPD_InPntr11
//0x38, 6, 0x0D, 0x04, 0x00, 0x00, 0x00, 0x00,//XA_QPD_InPntr12
//0x38, 6, 0x0D, 0x03, 0xFF, 0x00, 0x00, 0x00,//XA_QPD_InPntr11
//0x38, 6, 0x0D, 0x04, 0x00, 0x00, 0x00, 0x00,//XA_QPD_InPntr12
//0x38, 5, 0x0D, 0x12, 0xE2, 0x05, 0xF2,//YA_QPD_kpL1
//0x38, 5, 0x0D, 0x12, 0xE3, 0x08, 0x02,//YA_QPD_kpH1
//0x38, 5, 0x0D, 0x12, 0xE4, 0x00, 0xEB,//YA_QPD_kmL1
//0x38, 5, 0x0D, 0x12, 0xE5, 0x00, 0x05,//YA_QPD_kmH1
//0x38, 6, 0x0D, 0x00, 0xF7, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E2 05 F2 P , YA_QPD_kpL1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E3 08 02 P , YA_QPD_kpH1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E4 00 EB P , YA_QPD_kmL1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E5 00 05 P , YA_QPD_kmH1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 00 F7 00 00 6E P , XA_QPD_COUNTMAX1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E2 05 F2 P , YA_QPD_kpL1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E3 08 02 P , YA_QPD_kpH1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E4 00 EB P , YA_QPD_kmL1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E5 00 05 P , YA_QPD_kmH1
////上午 09:56:19:I2CW: Dsp_ S 38  0D 00 F7 00 00 6E P , XA_QPD_COUNTMAX1
//
//0x38, 6, 0x0D, 0x04, 0x01, 0x00, 0x00, 0x00,//XA_QPD_InPntr21
//0x38, 6, 0x0D, 0x04, 0x02, 0x00, 0x00, 0x00,//XA_QPD_InPntr22
//0x38, 6, 0x0D, 0x04, 0x01, 0x00, 0x00, 0x00,//XA_QPD_InPntr21
//0x38, 6, 0x0D, 0x04, 0x02, 0x00, 0x00, 0x00,//XA_QPD_InPntr22
//0x38, 5, 0x0D, 0x12, 0xE6, 0x05, 0xF2,//YA_QPD_kpL2
//0x38, 5, 0x0D, 0x12, 0xE7, 0x08, 0x02,//YA_QPD_kpH2
//0x38, 5, 0x0D, 0x12, 0xE8, 0x00, 0xEB,//YA_QPD_kmL2
//0x38, 5, 0x0D, 0x12, 0xE9, 0x00, 0x05,//YA_QPD_kmH2
//0x38, 5, 0x0D, 0x00, 0xF9, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E6 05 F2 P , YA_QPD_kpL2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E7 08 02 P , YA_QPD_kpH2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E8 00 EB P , YA_QPD_kmL2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E9 00 05 P , YA_QPD_kmH2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 00 F9 00 00 6E P , XA_QPD_COUNTMAX2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E6 05 F2 P , YA_QPD_kpL2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E7 08 02 P , YA_QPD_kpH2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E8 00 EB P , YA_QPD_kmL2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 12 E9 00 05 P , YA_QPD_kmH2
////上午 09:56:19:I2CW: Dsp_ S 38  0D 00 F9 00 00 6E P , XA_QPD_COUNTMAX2
//
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x20,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x3C,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x27,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x43,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x2E,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x4A,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x35,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x51,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x92,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index  
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xB0,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                              
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x9C,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                              
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xBA,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                           
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xA6,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                               
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xC4,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                            
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x58,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x74,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x5F,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x7B,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index 
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x66,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x82,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x6D,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET（14 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0x89,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x07,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSE（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xCE,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                               
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSE（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xEC,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                               
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xD8,//XA_SrcSw_OrDigSrcSelMask 
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                              
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xF6,//XA_SrcSw_OrDigSrcSelMask 
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                              
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x01, 0xE2,//XA_SrcSw_OrDigSrcSelMask  
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                               
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x00,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index                               
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x76,//XA_EasyP_Index
//
//0x38, 5, 0x0D, 0x10, 0x90, 0x04, 0x00,//YA_Vol_FLonSwL
//0x38, 5, 0x0D, 0x10, 0x91, 0x04, 0x00,//YA_Vol_FRonSwL
//0x38, 5, 0x0D, 0x10, 0x92, 0x00, 0x00,//YA_Vol_RLonSwL
//0x38, 5, 0x0D, 0x10, 0x93, 0x00, 0x00,//YA_Vol_RRonSwL
//0x38, 5, 0x0D, 0x10, 0x94, 0x02, 0x00,//YA_Vol_FLonSwR
//0x38, 5, 0x0D, 0x10, 0x95, 0x02, 0x00,//YA_Vol_FRonSwR
//0x38, 5, 0x0D, 0x10, 0x96, 0x02, 0x00,//YA_Vol_RLonSwR
//0x38, 5, 0x0D, 0x10, 0x97, 0x02, 0x00,//YA_Vol_RRonSwR
//
//0x38, 23, 0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x01, 0xF2, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1B, 0x03, 0xF1, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x0A,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x03, 0x15, 0x00, 0x0E, 0x03, 0x15, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x01, 0xD5, 0x03, 0xE3, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x14,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x03, 0x70, 0x00, 0x15, 0x03, 0x70, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20, 0x03, 0xD5, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x1E,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//
//0x38, 5, 0x0D, 0x10, 0x82, 0x07, 0xFF,//YA_Vol_SignSwL
//0x38, 5, 0x0D, 0x10, 0x83, 0x07, 0xFF,//YA_Vol_SignSwR
//
//0x38, 6, 0x0D, 0x04, 0xCC, 0x00, 0x00, 0x00,//XA_SCD_InPntr00
//0x38, 6, 0x0D, 0x04, 0xCD, 0x00, 0x00, 0x00,//XA_SCD_InPntr01
//0x38, 6, 0x0D, 0x04, 0xD5, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh0
//0x38, 7, 0x0D, 0x14, 0x97, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL0（4 Bytes）
//0x38, 7, 0x0D, 0x14, 0x99, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL0（4 Bytes）
//0x38, 6, 0x0D, 0x04, 0xCE, 0x00, 0x00, 0x00,//XA_SCD_InPntr1
//0x38, 6, 0x0D, 0x04, 0xD6, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh1
//0x38, 7, 0x0D, 0x14, 0x9B, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL1（4 Bytes）
//0x38, 7, 0x0D, 0x14, 0x9D, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL1（4 Bytes）
//0x38, 6, 0x0D, 0x04, 0xCF, 0x00, 0x00, 0x00,//XA_SCD_InPntr2
//0x38, 6, 0x0D, 0x04, 0xD7, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh2
//0x38, 7, 0x0D, 0x14, 0x9F, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL2（4 Bytes）
//0x38, 7, 0x0D, 0x14, 0xA1, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL2（4 Bytes）
//0x38, 6, 0x0D, 0x04, 0xD0, 0x00, 0x00, 0x00,//XA_SCD_InPntr3
//0x38, 6, 0x0D, 0x04, 0xD8, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh3
//0x38, 7, 0x0D, 0x14, 0xA3, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL3（4 Bytes）
//0x38, 7, 0x0D, 0x14, 0xA5, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL3（4 Bytes）
//0x38, 6, 0x0D, 0x01, 0xBE, 0x00, 0x11, 0xC0,//XA_FCLim_FlgGenDSPIO_Polarity
//0x38, 6, 0x0D, 0x01, 0xBF, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR
//0x38, 6, 0x0D, 0x01, 0xC0, 0x00, 0x00, 0x02,//XA_FCLim_FlgGenMaskSwL
//0x38, 6, 0x0D, 0x01, 0xC1, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR
//0x38, 6, 0x0D, 0x01, 0xC2, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS
//
//0x38, 7, 0x0D, 0x10, 0x9A, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLFR
//0x38, 7, 0x0D, 0x10, 0x98, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLFR
//0x38, 7, 0x0D, 0x10, 0x9E, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLSwL
//0x38, 7, 0x0D, 0x10, 0x9C, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLSwL
//0x38, 7, 0x0D, 0x10, 0xA2, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLSwR
//0x38, 7, 0x0D, 0x10, 0xA0, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLSwR
//0x38, 7, 0x0D, 0x10, 0xA6, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLRS
//0x38, 7, 0x0D, 0x10, 0xA4, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLRS
//
//0x38, 6, 0x0D, 0x01, 0xB6, 0xF3, 0x33, 0x33,// XA_FCLim_MinGainFR
//0x38, 6, 0x0D, 0x01, 0xB8, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainSwL
//0x38, 6, 0x0D, 0x01, 0xBA, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainSwR
//0x38, 6, 0x0D, 0x01, 0xBC, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainRS
//
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0xD1, 0x00, 0x22, 0x00, 0xD1, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x04, 0xBB, 0x03, 0x77, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x4C,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x01, 0xDA, 0x00, 0x40, 0x01, 0xDA, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x56,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0xD1, 0x00, 0x22, 0x00, 0xD1, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x04, 0xBB, 0x03, 0x77, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x60,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x01, 0xDA, 0x00, 0x40, 0x01, 0xDA, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x04, 0x6A,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//
//0x38, 5, 0x0D, 0x10, 0x0C, 0x07, 0xFF,//YA_DCfilt_a1A
//0x38, 5, 0x0D, 0x10, 0x0E, 0x08, 0x01,//YA_DCfilt_b0A
//0x38, 5, 0x0D, 0x10, 0x0D, 0x08, 0x01,//YA_DCfilt_b1A
//0x38, 5, 0x0D, 0x10, 0x0F, 0x07, 0xFF,//YA_DCfilt_a1B
//0x38, 5, 0x0D, 0x10, 0x11, 0x08, 0x01,//YA_DCfilt_b0B
//0x38, 5, 0x0D, 0x10, 0x10, 0x08, 0x01,//YA_DCfilt_b1B
//
////I2CW: IOExp3_ is Disabled
//
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x5E,//XA_EasyP_Index
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x66,//XA_EasyP_Index
//
////INFO: Init the delay settings for 2 channel delay
//
//0x38, 6, 0x0D, 0x05, 0x4F, 0x00, 0x00, 0x01,//XA_Delay_Length1_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//0x38, 6, 0x0D, 0x05, 0x50, 0x00, 0x00, 0x01,//XA_Delay_Length2_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//0x38, 6, 0x0D, 0x05, 0x51, 0x00, 0x00, 0x01,//XA_Delay_Length3_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//0x38, 6, 0x0D, 0x05, 0x52, 0x00, 0x00, 0x01,//XA_Delay_Length4_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//0x38, 6, 0x0D, 0x05, 0x53, 0x00, 0x00, 0x01,//XA_Delay_Length5_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//0x38, 6, 0x0D, 0x05, 0x54, 0x00, 0x00, 0x01,//XA_Delay_Length6_In
//0x38, 6, 0x0D, 0x05, 0x55, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
//
//0x38, 6, 0x0D, 0x03, 0xEC, 0x00, 0x00, 0x00,//XA_GPF_LInPntr
//0x38, 6, 0x0D, 0x03, 0xED, 0x00, 0x00, 0x00,//XA_GPF_RInPntr
//
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x32,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//0x38, 23, 0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET（20 Bytes）
//0x38, 6, 0x0D, 0x00, 0x69, 0x0D, 0x02, 0x3C,//XA_SrcSw_OrDigSrcSelMask
//0x38, 6, 0x0D, 0x00, 0x6A, 0x00, 0x00, 0x0A,//XA_EasyP_Index
//
//0x38, 5, 0x0D, 0x10, 0x6C, 0x00, 0x00,//YA_Mute_P
//0x38, 6, 0x0D, 0x00, 0x3B, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelP
//0x38, 6, 0x0D, 0x00, 0x3A, 0x00, 0x76, 0xE3,//XA_Mute_StpAttP
//0x38, 5, 0x0D, 0x10, 0x6D, 0x00, 0x00,//YA_Mute_S
//0x38, 6, 0x0D, 0x00, 0x3E, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelS
//0x38, 6, 0x0D, 0x00, 0x3D, 0x00, 0x76, 0xE3,//XA_Mute_StpAttS
//0x38, 5, 0x0D, 0x10, 0x6E, 0x00, 0x00,//YA_Mute_N
//0x38, 6, 0x0D, 0x00, 0x41, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelN
//0x38, 6, 0x0D, 0x00, 0x40, 0x00, 0x76, 0xE3,//XA_Mute_StpAttN
//0x38, 5, 0x0D, 0x10, 0x6F, 0x00, 0x00,//YA_Mute_T
//0x38, 6, 0x0D, 0x00, 0x44, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelT
//0x38, 6, 0x0D, 0x00, 0x43, 0x00, 0x76, 0xE3,//XA_Mute_StpAttT
//0x38, 5, 0x0D, 0x10, 0x70, 0x08, 0x00,//YA_MuteSix_FL
//0x38, 5, 0x0D, 0x10, 0x71, 0x08, 0x00,//YA_MuteSix_FR
//0x38, 5, 0x0D, 0x10, 0x72, 0x08, 0x00,//YA_MuteSix_RL
//0x38, 5, 0x0D, 0x10, 0x73, 0x08, 0x00,//YA_MuteSix_RR
//0x38, 5, 0x0D, 0x10, 0x74, 0x08, 0x00,//YA_MuteSix_SwL
//0x38, 5, 0x0D, 0x10, 0x75, 0x08, 0x00,//YA_MuteSix_SwR
//0x38, 6, 0x0D, 0x00, 0x4A, 0x00, 0x17, 0xC7,//XA_MuteSix_StpRel
//0x38, 6, 0x0D, 0x00, 0x49, 0x00, 0xED, 0xC6,//XA_MuteSix_StpAtt
//
////INFO: Ready initialising all audio features 
//
//0x38, 5, 0x0D, 0x10, 0x6C, 0x08, 0x00,//YA_Mute_P
//0x38, 5, 0x0D, 0x10, 0x6D, 0x08, 0x00,//YA_Mute_S
//0x38, 5, 0x0D, 0x10, 0x6F, 0x08, 0x00,//YA_Mute_T
//0x38, 5, 0x0D, 0x10, 0x6E, 0x08, 0x00,//YA_Mute_N
//0
//};

BYTE SAF7741_Audio_Init_Data[]={
//INFO: Start initialising
//0x38, 5, 0x0D, 0x10, 0x6D, 0x00, 0x00,//YA_Mute_P
//0x38, 5, 0x0D, 0x10, 0x6E, 0x00, 0x00,//YA_Mute_S
//0x38, 5, 0x0D, 0x10, 0x6F, 0x00, 0x00,//YA_Mute_T
//0x38, 5, 0x0D, 0x10, 0x70, 0x00, 0x00,//YA_Mute_N
//INFO: Initialise Main module.....
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x49,//IIC_DSP_CTR
0x38, 5, 0x00, 0x00, 0x50, 0xE6, 0x0F,//IIC_CLK_EN
//0x38, 5, 0x00, 0x00, 0x50, 0x06, 0x0F,//IIC_CLK_EN
0x38, 6, 0x00, 0x00, 0x20, 0x00, 0x00, 0x06,//IIC_CLKPLL_CTR (Make Msel first 0 to prevent a DSP halt)
//0x38, 6, 0x00, 0x00, 0x20, 0x02, 0x00, 0x06,//IIC_CLKPLL_CTR (Make Msel first 0 to prevent a DSP halt)
0x38, 6, 0x00, 0x00, 0x20, 0x00, 0x0C, 0xC6,//IIC_CLKPLL_CTR (Msel $0CC, Spdif_sel $1, Dsp_sel $2)
//0x38, 6, 0x00, 0x00, 0x20, 0x02, 0x0C, 0xC6,//IIC_CLKPLL_CTR (Msel $0CC, Spdif_sel $1, Dsp_sel $2)
//0x38, 5, 0x00, 0x00, 0x50, 0xE7, 0xFE,//IIC_CLK_EN
0x38, 5, 0x00, 0x00, 0x50, 0xE7, 0xFF,//IIC_CLK_EN
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x49,//IIC_DSP_CTR
0x38, 243,0x04, 0x80, 0x00, 0x5C, 0x00, 0xF0, 0x00, 0x68, 0x00, 0x00, 0x08, 0x14, 0x00, 0x50, 0x10,
		  0x14, 0x00, 0xA0, 0x50, 0x14, 0x00, 0xF0, 0x00, 0x5C, 0x00, 0xF0, 0x01, 0x68, 0xFF, 0x00,
		  0xFF, 0x14, 0x00, 0x50, 0x10, 0x14, 0x00, 0x90, 0x50, 0x68, 0x00, 0x04, 0x00, 0x14, 0x00,
		  0xA0, 0x50, 0x14, 0x00, 0xF0, 0x01, 0x40, 0x00, 0x01, 0x01, 0x48, 0x00, 0x80, 0x1A, 0x41,
		  0x00, 0x03, 0xAF, 0x74, 0x10, 0x00, 0x28, 0x41, 0x00, 0x03, 0xB1, 0x74, 0x12, 0x00, 0x18,
		  0x74, 0x12, 0x07, 0xE8, 0x40, 0x00, 0x06, 0xEF, 0x49, 0x10, 0x00, 0x00, 0x40, 0x00, 0x00,
		  0xFF, 0x48, 0x00, 0x80, 0x34, 0x7F, 0xFC, 0x01, 0x02, 0x7C, 0x00, 0x00, 0x00, 0x7C, 0x00,
		  0x00, 0x00, 0x7F, 0xFC, 0x01, 0x02, 0x6C, 0x10, 0xF6, 0x84, 0x38, 0x10, 0xF0, 0xC6, 0x41,
		  0x00, 0x00, 0x26, 0x34, 0x10, 0x60, 0x00, 0x41, 0x00, 0x03, 0xB0, 0x34, 0x10, 0x64, 0x00,
		  0x41, 0x00, 0x03, 0xAF, 0x34, 0x10, 0x68, 0x00, 0x14, 0x00, 0x50, 0x50, 0x14, 0x00, 0x30,
		  0x00, 0x7E, 0x70, 0x80, 0x2E, 0x7C, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x14, 0x00,
		  0x10, 0x90, 0x14, 0x00, 0x30, 0x00, 0x7E, 0x78, 0x54, 0x10, 0x7F, 0xF0, 0x80, 0x31, 0x7C,
		  0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x14, 0x00, 0x30, 0x90, 0x14, 0x00, 0x30, 0x00,
		  0x7C, 0x18, 0x54, 0x10, 0x7F, 0xFC, 0x00, 0x09, 0x26, 0x00, 0xF3, 0xB0, 0x26, 0x00, 0xF0,
		  0x26, 0x5C, 0x00, 0xF0, 0x18, 0x68, 0x00, 0x00, 0x07, 0x14, 0x00, 0x50, 0x10, 0x14, 0x00,
		  0x90, 0x50, 0x68, 0x00, 0x00, 0x01, 0x14, 0x00, 0x30, 0x40, 0x7C, 0x60, 0x80, 0x57, 0x5C, 0x00, 0xF0, 0x21, 
0x38, 195,0x04, 0x80, 0x3C, 0x40, 0x00, 0x06, 0xEC, 0x5E, 0x00, 0x6C, 0x00, 0x7C, 0x00, 0x00, 0x1E,
		  0x14, 0x00, 0x50, 0x10, 0x16, 0x40, 0x30, 0xD0, 0x08, 0x00, 0x60, 0x00, 0x7C, 0x00, 0x00,
		  0x1D, 0x41, 0x00, 0x03, 0xB2, 0x5E, 0x16, 0x64, 0x00, 0x14, 0x14, 0x61, 0x28, 0x14, 0x00,
		  0x40, 0x38, 0x14, 0x00, 0x00, 0x10, 0x7C, 0x00, 0x00, 0x20, 0x14, 0x00, 0xF0, 0xB1, 0x14,
		  0x00, 0xF6, 0xEE, 0x16, 0x40, 0x60, 0x00, 0x7C, 0x00, 0x00, 0x1F, 0x5C, 0x00, 0xF6, 0xEF,
		  0x5C, 0x03, 0xF1, 0xB8, 0x14, 0x00, 0x63, 0x20, 0x14, 0x00, 0x40, 0x10, 0x14, 0x00, 0x30,
		  0x00, 0x7E, 0x78, 0x74, 0x10, 0x7E, 0x88, 0x54, 0xD0, 0x14, 0x00, 0xF6, 0xF0, 0x14, 0x00,
		  0xF1, 0xB8, 0x7F, 0xF0, 0x80, 0x5E, 0x5C, 0x00, 0xF0, 0x18, 0x68, 0x00, 0x00, 0x07, 0x14,
		  0x00, 0x50, 0x10, 0x14, 0x00, 0x90, 0x50, 0x68, 0x00, 0x00, 0x03, 0x14, 0x00, 0x30, 0x40,
		  0x7C, 0x60, 0x80, 0x69, 0xF4, 0x00, 0x00, 0x1D, 0x14, 0x00, 0x50, 0xD0, 0x04, 0x0B, 0x60,
		  0x00, 0x68, 0xF3, 0x33, 0x33, 0x14, 0x00, 0x50, 0x50, 0x04, 0x0C, 0x60, 0x00, 0xF4, 0x00,
		  0x00, 0x5D, 0x14, 0x00, 0x50, 0xD0, 0x04, 0x0B, 0x60, 0x00, 0x14, 0x00, 0x50, 0x50, 0x04,
		  0x0C, 0x60, 0x00, 0x7F, 0xFC, 0x01, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x49,//IIC_DSP_CTR
0x38, 107,0x06, 0x80, 0x00, 0x5C, 0x00, 0xF0, 0x00, 0x68, 0x00, 0x00, 0x08, 0x14, 0x00, 0x50, 0x10,
		  0x14, 0x00, 0xA0, 0x50, 0x14, 0x00, 0xF0, 0x00, 0x5C, 0x00, 0xF0, 0x01, 0x68, 0xFF, 0x00,
		  0xFF, 0x14, 0x00, 0x50, 0x10, 0x14, 0x00, 0x90, 0x50, 0x68, 0x00, 0x04, 0x00, 0x14, 0x00,
		  0xA0, 0x50, 0x14, 0x00, 0xF0, 0x01, 0x7F, 0xFC, 0x01, 0x81, 0x40, 0x00, 0x01, 0x80, 0x48,
		  0x00, 0x80, 0x14, 0x40, 0x00, 0x01, 0x99, 0x48, 0x00, 0x1E, 0x3D, 0x7F, 0xFC, 0x01, 0x99,
		  0x40, 0x00, 0x01, 0x98, 0x48, 0x00, 0x80, 0x17, 0x7F, 0xFC, 0x01, 0x81, 0x6C, 0x10, 0xF5,
		  0x84, 0x38, 0x10, 0xF1, 0x49, 0x7F, 0xFC, 0x01, 0x99, 0x6C, 0x10, 0xF5, 0x84, 0x38, 0x10, 0xF1, 0x49,  
0x38, 5, 0x00, 0x00, 0x40, 0x30, 0x00,//IIC_APD_CTRL1
0x38, 5, 0x00, 0x00, 0x41, 0x01, 0xC0,//IIC_APD_CTRL2
//0x38, 5, 0x00, 0x00, 0x40, 0x0A, 0x20,//IIC_APD_CTRL1
//0x38, 5, 0x00, 0x00, 0x41, 0x01, 0xC0,//IIC_APD_CTRL2
//0x38, 5, 0x00, 0x00, 0x50, 0xE7, 0xFE,//IIC_CLK_EN
0x38, 5, 0x00, 0x00, 0x50, 0xE7, 0xFF,//IIC_CLK_EN
0x38, 6, 0x05, 0x0F, 0xD4, 0x07, 0x02, 0x40,//PDC2_AGC_CTRL_4 (PDC2: Default changed)
0x38, 6, 0x05, 0x0F, 0xCA, 0xEA, 0x7D, 0xBF,//PDC2_AGC_GAIN_1_2 (PDC2: AGC Gain default)
0x38, 6, 0x05, 0x0F, 0xC0, 0x0F, 0xF0, 0x00,//PDC2_AGC_GAIN_0_0
0x38, 6, 0x01, 0x0F, 0xD4, 0x07, 0x02, 0x40,//PDC1_AGC_CTRL_4 (PDC1: Default changed)
0x38, 6, 0x01, 0x0F, 0xCA, 0xEA, 0x7D, 0xBF,//PDC1_AGC_GAIN_1_2 (PDC1: AGC Gain default)
0x38, 6, 0x01, 0x0F, 0xC0, 0x0F, 0xF0, 0x00,//PDC1_AGC_GAIN_0_0
//INFO: Reset DSP1
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x49,//IIC_DSP_CTR
//INFO: Release DSP1
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x48,//IIC_DSP_CTR
//INFO: Sending KeyCodes for radio features........
0x38, 6, 0x01, 0x00, 0x08, 0x00, 0x00, 0x01,//X1_FW_KeyCod
//INFO: Reset DSP1E
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x48,//IIC_DSP_CTR
//INFO: Release DSP1E
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x08,//IIC_DSP_CTR
//INFO: Reset DSP2
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x08,//IIC_DSP_CTR
//INFO: Release DSP2
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x00,//IIC_DSP_CTR
//INFO: Reset SDSP
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x12, 0x00,//IIC_DSP_CTR
//INFO: Release SDSP
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,//IIC_DSP_CTR
//INFO: Reset ADSP
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,//IIC_DSP_CTR
//INFO: Release ADSP
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,//IIC_DSP_CTR
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x80,//IIC_DSP_CTR (Enable dynamic PRAM access for TDSP1E)
0x38, 6, 0x00, 0x00, 0x10, 0x00, 0x00, 0x90,//IIC_DSP_CTR (Enable dynamic PRAM access for TDSP2)
0x38, 6, 0x03, 0x01, 0x01, 0x00, 0x80, 0x00,//XE_pFW_Main_1E_Hook_Begin (Combi-patch Hook in UserCode for TDSP1E)
0x38, 6, 0x05, 0x01, 0x80, 0x00, 0x80, 0x00,//X2_pFW_Main_2_Hook_Begin (Combi-patch Hook in UserCode for TDSP2)
0x38, 6, 0x09, 0x01, 0xFB, 0x80, 0x00, 0x00,//XS_CtrlTS1 (Enable Src1)
0x38, 6, 0x09, 0x01, 0xFC, 0x80, 0x00, 0x00,//XS_CtrlTS2 (Enable Src2)
0x38, 6, 0x09, 0x01, 0xFD, 0x80, 0x00, 0x00,//XS_CtrlTS3 (Enable Src3)
0x38, 6, 0x09, 0x01, 0xFE, 0x80, 0x00, 0x00,//XS_CtrlTS4 (Enable Src4)
0x38, 6, 0x09, 0x01, 0xFF, 0x80, 0x00, 0x00,//XS_CtrlTS5 (Enable Src5)

0x38, 5, 0x00, 0x00, 0xC0, 0x00, 0x88,//IIC_DAC_DELAY (Enable Sequential DAC delay)
0x38, 5, 0x00, 0x00, 0x70, 0x00, 0x04,//IIC_DIR1_COMP (Dual Tuner)
0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR (IIS_IO_Control new default)
//INFO: Start initialising all audio features
//INFO: Sending KeyCodes for audio features........
0x38, 6, 0x0D, 0x00, 0x01, 0x00, 0x00, 0x01,//XA_KeyCode (KickOff the ADSP)
//INFO: Enable Chime
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x88,//XA_EasyP_Index
0x38, 6, 0x0D, 0x03, 0x97, 0x4B, 0x15, 0xB5,//XA_Tsq_ChangeThreshold
0x38, 7, 0x0D, 0x11, 0x09, 0x01, 0xFD, 0x07, 0xEB,//YA_Tsq_T1b1Ltone_Bk
0x38, 7, 0x0D, 0x11, 0x0E, 0x01, 0xFD, 0x07, 0xEB,//YA_Tsq_T2b1Ltone_Bk
0x38, 7, 0x0D, 0x11, 0x13, 0x01, 0xFD, 0x07, 0xEB,//YA_Tsq_T3b1Ltone_Bk
0x38, 7, 0x0D, 0x11, 0x18, 0x01, 0xFD, 0x07, 0xEB,//YA_Tsq_T4b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0B, 0x0D, 0xFE,//YA_Tsq_T1Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x10, 0x0D, 0xFE,//YA_Tsq_T2Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x15, 0x0D, 0xFE,//YA_Tsq_T3Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x1A, 0x0D, 0xFE,//YA_Tsq_T4Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x1D, 0x02, 0x02,//YA_Tsq_ChimeVol_Bk
0x38, 6, 0x0D, 0x03, 0x8B, 0x01, 0x29, 0x37,//XA_Tsq_CrosFStp_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x01, 0x29, 0x37,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x98, 0x00, 0x00, 0x00,//XA_Tsq_DecayThreshold
0x38, 5, 0x0D, 0x11, 0x07, 0x00, 0x01,//YA_Tsq_ArType_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x7E, 0xD8, 0x21,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x03, 0x3B,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x03, 0x3B,//XA_Tsq_TB_Bk
0x38, 6, 0x0D, 0x03, 0x91, 0x00, 0x03, 0x3B,//XA_Tsq_T1_Bk
0x38, 6, 0x0D, 0x03, 0x92, 0x00, 0x03, 0x3B,//XA_Tsq_T2_Bk
0x38, 6, 0x0D, 0x03, 0x93, 0x00, 0x03, 0x3B,//XA_Tsq_T3_Bk
0x38, 6, 0x0D, 0x03, 0x94, 0x00, 0x03, 0x3B,//XA_Tsq_T4_Bk
0x38, 6, 0x0D, 0x03, 0x8E, 0x00, 0x00, 0x03,//XA_Tsq_repeate_Bk
0x38, 6, 0x0D, 0x03, 0x97, 0x40, 0x26, 0xE7,//XA_Tsq_ChangeThreshold
0x38, 6, 0x0D, 0x03, 0x98, 0x00, 0x00, 0x00,//XA_Tsq_DecayThreshold
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 5, 0x0D, 0x11, 0x0D, 0x00, 0x00,//YA_Tsq_T1Type_Bk
0x38, 5, 0x0D, 0x11, 0x11, 0x00, 0x80,//YA_Tsq_T2Clip_Bk
0x38, 5, 0x0D, 0x11, 0x12, 0x00, 0x00,//YA_Tsq_T2Type_Bk
0x38, 5, 0x0D, 0x11, 0x16, 0x00, 0x80,//YA_Tsq_T3Clip_Bk
0x38, 5, 0x0D, 0x11, 0x17, 0x00, 0x00,//YA_Tsq_T3Type_Bk
0x38, 5, 0x0D, 0x11, 0x1B, 0x00, 0x80,//YA_Tsq_T4Clip_Bk
0x38, 5, 0x0D, 0x11, 0x1C, 0x00, 0x00,//YA_Tsq_T4Type_Bk
0x38, 6, 0x0D, 0x03, 0x95, 0x00, 0x00, 0x00,//XA_Tsq_addmul_Bk
0x38, 5, 0x0D, 0x11, 0x1E, 0x08, 0x00,//YA_Tsq_c02_Bk
0x38, 5, 0x0D, 0x11, 0x1F, 0x0F, 0xFF,//YA_Tsq_c1_Bk
0x38, 5, 0x0D, 0x11, 0x20, 0x0F, 0xFF,//YA_Tsq_c3_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x04, 0x2D,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x02, 0x74,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x00, 0xB9,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x80, 0x00, 0x00,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x00, 0xB9,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 5, 0x0D, 0x11, 0x0E, 0x08, 0x00,//YA_Tsq_T2b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0F, 0x08, 0x00,//YA_Tsq_T2b1Htone_Bk
0x38, 5, 0x0D, 0x11, 0x10, 0x08, 0x00,//YA_Tsq_T2Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x11, 0x08, 0x00,//YA_Tsq_T2Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8E, 0x00, 0x1D, 0xB9,//XA_Tsq_repeate_Bk
0x38, 5, 0x0D, 0x11, 0x0B, 0x08, 0x00,//YA_Tsq_T1Vtone_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x04, 0x2D,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x02, 0x74,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x00, 0x00, 0x53,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x00, 0xB9,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8C, 0x05, 0xCE, 0x14,//XA_Tsq_ArLinStpA_Bk
0x38, 6, 0x0D, 0x03, 0x8D, 0x00, 0xA5, 0x1F,//XA_Tsq_ArRelCoef_Bk
0x38, 6, 0x0D, 0x03, 0x8F, 0x80, 0x00, 0x00,//XA_Tsq_TA_Bk
0x38, 6, 0x0D, 0x03, 0x90, 0x00, 0x00, 0xB9,//XA_Tsq_TB_Bk
0x38, 7, 0x0D, 0x11, 0x09, 0x03, 0x43, 0x07, 0xD1,//YA_Tsq_T1b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0C, 0x00, 0x80,//YA_Tsq_T1Clip_Bk
0x38, 5, 0x0D, 0x11, 0x0E, 0x08, 0x00,//YA_Tsq_T2b1Ltone_Bk
0x38, 5, 0x0D, 0x11, 0x0F, 0x08, 0x00,//YA_Tsq_T2b1Htone_Bk
0x38, 5, 0x0D, 0x11, 0x10, 0x08, 0x00,//YA_Tsq_T2Vtone_Bk
0x38, 5, 0x0D, 0x11, 0x11, 0x08, 0x00,//YA_Tsq_T2Clip_Bk
0x38, 6, 0x0D, 0x03, 0x8E, 0x00, 0x1D, 0xB9,//XA_Tsq_repeate_Bk
0x38, 5, 0x0D, 0x11, 0x0B, 0x08, 0x00,//YA_Tsq_T1Vtone_Bk

//INFO: Enable Graphical Spectrum Analyser
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x50,//XA_EasyP_Index

////INFO: PChime generator is enabled
//0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xA2,//XA_EasyP_Index
//0x38, 7, 0x0D, 0x14, 0x75, 0x07, 0xFD, 0x01, 0xBA,//YA_PCHIME_Freq1_MSB
//0x38, 5, 0x0D, 0x14, 0x77, 0x00, 0xE6,//YA_PCHIME_Volume1
//0x38, 7, 0x0D, 0x14, 0x78, 0x07, 0xD1, 0x06, 0x3A,//YA_PCHIME_Freq2_MSB
//0x38, 5, 0x0D, 0x14, 0x7A, 0x00, 0x20,//YA_PCHIME_Volume2
//0x38, 7, 0x0D, 0x14, 0x7B, 0x07, 0xFB, 0x07, 0xAB,//YA_PCHIME_Freq3_MSB
//0x38, 5, 0x0D, 0x14, 0x7D, 0x02, 0x88,//YA_PCHIME_Volume3
//0x38, 7, 0x0D, 0x14, 0x7E, 0x07, 0xC1, 0x00, 0xD0,//YA_PCHIME_Freq4_MSB
//0x38, 5, 0x0D, 0x14, 0x80, 0x00, 0x40,//YA_PCHIME_Volume4
//0x38, 7, 0x0D, 0x14, 0x81, 0x07, 0xF8, 0x05, 0x8F,//YA_PCHIME_Freq5_MSB
//0x38, 5, 0x0D, 0x14, 0x83, 0x04, 0x00,//YA_PCHIME_Volume5
//0x38, 7, 0x0D, 0x14, 0x84, 0x07, 0x8F, 0x04, 0x24,//YA_PCHIME_Freq6_MSB
//0x38, 5, 0x0D, 0x14, 0x86, 0x00, 0x1C,//YA_PCHIME_Volume6
//0x38, 6, 0x0D, 0x05, 0x32, 0x00, 0x0A, 0x67,//XA_PCHIME_AngleIncr_LFO
//0x38, 5, 0x0D, 0x14, 0x87, 0x02, 0x66,//YA_PCHIME_Ampli_LFO
//0x38, 5, 0x0D, 0x14, 0x88, 0x05, 0x99,//YA_PCHIME_Offset_LFO
//0x38, 6, 0x0D, 0x05, 0x33, 0x00, 0x00, 0x00,//XA_PCHIME_Env1_DelaySamples
//0x38, 5, 0x0D, 0x14, 0x89, 0x01, 0x45,//YA_PCHIME_Env1_DelayVolume
//0x38, 6, 0x0D, 0x05, 0x34, 0x17, 0x38, 0x4F,//XA_PCHIME_Env1_AttackIncr
//0x38, 6, 0x0D, 0x05, 0x35, 0x00, 0x03, 0x04,//XA_PCHIME_Env1_SustainSamples
//0x38, 7, 0x0D, 0x14, 0x8A, 0x07, 0xFF, 0x05, 0xE0,//YA_PCHIME_Env1_DecayCoef_MSB
//0x38, 6, 0x0D, 0x05, 0x36, 0x00, 0x01, 0xF0,//XA_PCHIME_Env2_DelaySamples
//0x38, 5, 0x0D, 0x14, 0x8C, 0x00, 0x01,//YA_PCHIME_Env2_DelayVolume
//0x38, 6, 0x0D, 0x05, 0x37, 0x17, 0x38, 0x4F,//XA_PCHIME_Env2_AttackIncr
//0x38, 6, 0x0D, 0x05, 0x38, 0x00, 0x03, 0x04,//XA_PCHIME_Env2_SustainSamples
//0x38, 7, 0x0D, 0x14, 0x8D, 0x07, 0xFF, 0x05, 0xE0,//YA_PCHIME_Env2_DecayCoef_MSB
//0x38, 6, 0x0D, 0x05, 0x39, 0x00, 0x03, 0x7D,//XA_PCHIME_Env3_DelaySamples
//0x38, 5, 0x0D, 0x14, 0x8F, 0x00, 0x01,//YA_PCHIME_Env3_DelayVolume
//0x38, 6, 0x0D, 0x05, 0x3A, 0x17, 0x38, 0x4F,//XA_PCHIME_Env3_AttackIncr
//0x38, 6, 0x0D, 0x05, 0x3B, 0x00, 0x03, 0x04,//XA_PCHIME_Env3_SustainSamples
//0x38, 7, 0x0D, 0x14, 0x90, 0x07, 0xFF, 0x05, 0xE0,//YA_PCHIME_Env3_DecayCoef_MSB
//0x38, 7, 0x0D, 0x14, 0x92, 0x07, 0x4E, 0x03, 0x53,//YA_PCHIME_SMute_DecayCoef_MSB
//0x38, 6, 0x0D, 0x05, 0x3C, 0x00, 0x2B, 0x11,//XA_PCHIME_NrRepetitions
//0x38, 6, 0x0D, 0x05, 0x3D, 0x00, 0x67, 0x5C,//XA_PCHIME_RepeatSamples
//0x38, 6, 0x0D, 0x05, 0x3E, 0x00, 0x00, 0x00,//XA_PCHIME_ControlStatusReg

0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x1D,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x2D, 0x04, 0x00,//YA_Vol_SrcScalP
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x1A,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x86, 0x04, 0x00,//YA_Vol_SrcScalS
0x38, 6, 0x0D, 0x03, 0xED, 0x00, 0x00, 0xF0,//XA_Sup_ExtInPntr
0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR
0x38, 6, 0x0D, 0x0F, 0xF6, 0x06, 0xB6, 0xDB,//IIC_IISIO_CTR (Host IIS in master mode)
0x38, 6, 0x00, 0x00, 0x20, 0x00, 0x0C, 0xC6,//IIC_CLKPLL_CTR (Appl_in_sel = XTAL as input)
0x38, 6, 0x0D, 0x01, 0xB8, 0x00, 0x00, 0xA3,//XA_FDACpntr
0x38, 6, 0x0D, 0x01, 0xB9, 0x00, 0x00, 0xA5,//XA_RDACpntr
0x38, 6, 0x0D, 0x01, 0xB3, 0x00, 0x00, 0xA3,//XA_HIIS1Outpntr
0x38, 6, 0x0D, 0x01, 0xB4, 0x00, 0x00, 0xA3,//XA_HIIS2Outpntr
0x38, 6, 0x0D, 0x01, 0xB5, 0x00, 0x00, 0xA3,//XA_HIIS3Outpntr
0x38, 6, 0x0D, 0x01, 0xB6, 0x00, 0x00, 0xA3,//XA_HIIS4Outpntr
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x48,//XA_EasyP_Index
0x38, 6, 0x0D, 0x04, 0x1F, 0x00, 0x00, 0x72,//XA_SrcScal6_F_InPntr
0x38, 6, 0x0D, 0x04, 0x20, 0x00, 0x00, 0x74,//XA_SrcScal6_R_InPntr
0x38, 6, 0x0D, 0x04, 0x21, 0x00, 0x00, 0x76,//XA_SrcScal6_C_InPntr
0x38, 6, 0x0D, 0x04, 0x22, 0x00, 0x00, 0x78,//XA_SrcScal6_Sw_InPntr
0x38, 6, 0x0D, 0x00, 0x38, 0x10, 0x00, 0xD9,//XA_Vol_OneOverMaxBoostP
0x38, 5, 0x0D, 0x10, 0x34, 0x03, 0xF9,//YA_Vol_UpScalF
0x38, 5, 0x0D, 0x10, 0x35, 0x06, 0x48,//YA_Vol_UpScalR
0x38, 5, 0x0D, 0x10, 0x36, 0x03, 0xF7,//YA_Vol_UpScalSwL
0x38, 5, 0x0D, 0x10, 0x37, 0x04, 0xFD,//YA_Vol_UpScalSwR
0x38, 6, 0x0D, 0x00, 0x3B, 0x20, 0x01, 0x22,//XA_Vol_OneOverMaxBoostS
0x38, 5, 0x0D, 0x10, 0x2F, 0x06, 0x5B,//YA_Vol_ScalF
0x38, 5, 0x0D, 0x10, 0x30, 0x05, 0x0C,//YA_Vol_ScalR
0x38, 5, 0x0D, 0x10, 0x31, 0x07, 0xFF,//YA_Vol_ScalSwL
0x38, 5, 0x0D, 0x10, 0x32, 0x07, 0xFF,//YA_Vol_ScalSwR
0x38, 5, 0x0D, 0x10, 0x33, 0x07, 0xFF,//YA_Vol_ScalS
0x38, 5, 0x0D, 0x10, 0x38, 0x01, 0x94,//YA_Vol_UpScalS
//INFO: Initialise 2 channel standard mode
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x4A,//XA_EasyP_Index
//INFO: Init the compressor expander in 2 channel mode.....
0x38, 5, 0x0D, 0x10, 0xBD, 0x00, 0x00,//YA_CompExp_ExpL
0x38, 6, 0x0D, 0x02, 0xC7, 0x80, 0x00, 0x00,//XA_CompExp_switch
0x38, 5, 0x0D, 0x10, 0xBF, 0x00, 0x1D,//YA_CompExp_a0a
0x38, 5, 0x0D, 0x10, 0xC0, 0x00, 0x1D,//YA_CompExp_a1a
0x38, 5, 0x0D, 0x10, 0xBE, 0x07, 0xC6,//YA_CompExp_b1a
0x38, 7, 0x0D, 0x10, 0xAF, 0x05, 0x96, 0x07, 0xFF,//YA_CompExp_b1dL
0x38, 7, 0x0D, 0x10, 0xAD, 0x02, 0x6A, 0x00, 0x00,//YA_CompExp_a0dL
//INFO: Enable the graphic equaliser in 2 channel mode
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xD4,//XA_EasyP_Index
//INFO: Enable additional 4 bands for the graphic equaliser
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x86,//XA_EasyP_Index

//外加一段EQ 32Hz
0x38,17, 0x0D, 0x10, 0x00, 0x02, 0xA2, 0x00, 0x02, 0x05, 0x43, 0x0C, 0x04, 0x02, 0x91, 0x07, 0xFB, 0x00, 0x00,//EQ_32_FL-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x21,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x69, 0x00, 0x00, 0x07,//<EasyP_Index>
0x38,17, 0x0D, 0x10, 0x00, 0x02, 0xA2, 0x00, 0x02, 0x05, 0x43, 0x0C, 0x04, 0x02, 0x91, 0x07, 0xFB, 0x00, 0x00,//EQ_32_FR-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x3D,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x69, 0x00, 0x00, 0x07,//<EasyP_Index>

0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x00, 0x00,//EQ_63-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xA1,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x00, 0x00,//EQ_125-->0.0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xA8,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x00, 0x00,//EQ_250-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xAF,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x00, 0x00,//EQ_500-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xB6,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0x00,//EQ_1000-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xBA,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0x00,//EQ_2000-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xC0,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x00, 0x00,//EQ_4000-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xC7,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x00, 0x00,//EQ_8000-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xCE,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x21, 0x00, 0x42, 0x0D, 0x90, 0x00, 0x00,//EQ_16000-->0dB
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xD2,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7A, 0x07, 0xFF,//YA_Vol_DesScalGEq

0x38, 6, 0x0D, 0x02, 0xC5, 0x00, 0x00, 0xAF,//XA_Loudf_LevInPntr
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xB0,//XA_EasyP_Index
0x38, 6, 0x0D, 0x02, 0xB8, 0x00, 0x00, 0x00,//XA_Loudf_DynSwtch
0x38, 5, 0x0D, 0x12, 0xFB, 0x07, 0xFF,//YA_Loudf_StatLev
0x38, 5, 0x0D, 0x12, 0xFA, 0x07, 0xFF,//YA_Loudf_StatLevT
0x38, 7, 0x0D, 0x12, 0xFE, 0x02, 0xB6, 0x08, 0x09,//YA_Loudf_KpBL
0x38, 7, 0x0D, 0x13, 0x00, 0x02, 0x73, 0x00, 0x12,//YA_Loudf_KmBL
0x38, 7, 0x0D, 0x13, 0x05, 0x02, 0xB6, 0x08, 0x09,//YA_Loudf_KpTL
0x38, 7, 0x0D, 0x13, 0x07, 0x02, 0x73, 0x00, 0x12,//YA_Loudf_KmTL
0x38, 5, 0x0D, 0x13, 0x10, 0x04, 0x00,//YA_Loudf_GchanCorrect
0x38, 6, 0x0D, 0x02, 0xBE, 0x00, 0x56, 0x22,//XA_Loudf_HldThrshB
0x38, 6, 0x0D, 0x02, 0xC3, 0x00, 0x56, 0x22,//XA_Loudf_HldThrshT
//INFO: Ultrabass is Disabled
0x38, 6, 0x0D, 0x01, 0x9E, 0x00, 0x00, 0x00,//XA_AUB2_Mode
//INFO: Connect Channel Input pointers to Loudness outputs
0x38, 6, 0x0D, 0x03, 0xD7, 0x00, 0x00, 0xC7,//XA_FInPntr
0x38, 6, 0x0D, 0x03, 0xD8, 0x00, 0x00, 0xC7,//XA_RInPntr
0x38, 6, 0x0D, 0x03, 0xE4, 0x00, 0x00, 0xC7,//XA_SwFInPntr
0x38, 6, 0x0D, 0x03, 0xE5, 0x00, 0x00, 0xC7,//XA_SwRInPntr
//INFO: Disable Soft Clipping function
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xC6,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x39, 0x08, 0x00,//YA_Vol_ScalBstP
//INFO: Disable Soft DownMixing function
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xCE,//XA_EasyP_Index
0x38, 6, 0x0D, 0x03, 0xE6, 0x00, 0x00, 0x99,//XA_FSupInPntr
0x38, 6, 0x0D, 0x03, 0xE7, 0x00, 0x00, 0x9B,//XA_RSupInPntr
0x38, 6, 0x0D, 0x03, 0xE8, 0x00, 0x00, 0x9D,//XA_SwSupInPntr
//INFO: 2 Channel mode initialised
0x38, 6, 0x0D, 0x02, 0x8A, 0x00, 0x00, 0x00,//XA_FastMute_FlagIOMask (Reset bits)
0x38, 6, 0x0D, 0x00, 0x19, 0x00, 0x00, 0x00,//XA_Dmph_Flag_Mask (Reset bits)
0x38, 6, 0x0D, 0x00, 0xFD, 0x00, 0x00, 0x00,//XA_IBblnd_Flag_IOFMask (Reset bits)
0x38, 6, 0x0D, 0x01, 0xC8, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR (Reset bits)
0x38, 6, 0x0D, 0x01, 0xC9, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwL (Reset bits)
0x38, 6, 0x0D, 0x01, 0xCA, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR (Reset bits)
0x38, 6, 0x0D, 0x01, 0xCB, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS (Reset bits)
0x38, 6, 0x0D, 0x04, 0x52, 0x00, 0x00, 0x00,//XA_WavTab_FlagIOFMask (Reset bits)
0x38, 5, 0x0D, 0x10, 0x50, 0x08, 0x00,//YA_Vol_Main1P
0x38, 5, 0x0D, 0x10, 0x51, 0x01, 0x45,//YA_Vol_Main2P
0x38, 5, 0x0D, 0x10, 0x52, 0x08, 0x00,//YA_Vol_Main1S
0x38, 5, 0x0D, 0x10, 0x53, 0x01, 0x45,//YA_Vol_Main2S
0x38, 5, 0x0D, 0x10, 0x4F, 0x0D, 0xC0,//YA_Vol_Phon
0x38, 5, 0x0D, 0x10, 0x4E, 0x0D, 0xC0,//YA_Vol_Nav
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xCA,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0xC7, 0x0F, 0xFF,//YA_Sup_TonFL
0x38, 5, 0x0D, 0x10, 0xC8, 0x0F, 0xFF,//YA_Sup_TonFR
0x38, 5, 0x0D, 0x10, 0xC9, 0x0F, 0xFF,//YA_Sup_TonRL
0x38, 5, 0x0D, 0x10, 0xCA, 0x0F, 0xFF,//YA_Sup_TonRR
0x38, 5, 0x0D, 0x10, 0xCB, 0x0F, 0xFF,//YA_Sup_TonSW
0x38, 5, 0x0D, 0x10, 0xC2, 0x0F, 0xFF,//YA_Sup_NonFL
0x38, 5, 0x0D, 0x10, 0xC3, 0x0F, 0xFF,//YA_Sup_NonFR
0x38, 5, 0x0D, 0x10, 0xC6, 0x0F, 0xFF,//YA_Sup_NonSW
0x38, 5, 0x0D, 0x10, 0xD5, 0x0F, 0xFF,//YA_Sup_ChionFL
0x38, 5, 0x0D, 0x10, 0xD6, 0x0F, 0xFF,//YA_Sup_ChionFR
0x38, 5, 0x0D, 0x10, 0xD7, 0x0F, 0xFF,//YA_Sup_ChionRL
0x38, 5, 0x0D, 0x10, 0xD8, 0x0F, 0xFF,//YA_Sup_ChionRR
0x38, 5, 0x0D, 0x10, 0xDB, 0x0F, 0xFF,//YA_Sup_ChionSL
0x38, 5, 0x0D, 0x10, 0xDC, 0x0F, 0xFF,//YA_Sup_ChionSR
0x38, 5, 0x0D, 0x10, 0xD9, 0x0F, 0xFF,//YA_Sup_ChionSW
0x38, 5, 0x0D, 0x10, 0xCD, 0x0F, 0xFF,//YA_Sup_ExtonFL
0x38, 5, 0x0D, 0x10, 0xCE, 0x0F, 0xFF,//YA_Sup_ExtonFR
0x38, 5, 0x0D, 0x10, 0xCF, 0x0F, 0xFF,//YA_Sup_ExtonRL
0x38, 5, 0x0D, 0x10, 0xD0, 0x0F, 0xFF,//YA_Sup_ExtonRR
0x38, 5, 0x0D, 0x10, 0xD1, 0x0F, 0xFF,//YA_Sup_ExtonSW
0x38, 5, 0x0D, 0x10, 0xCC, 0x0F, 0xFF,//YA_Sup_TonSwR
0x38, 5, 0x0D, 0x10, 0xD2, 0x0F, 0xFF,//YA_Sup_ExtonSwR
0x38, 5, 0x0D, 0x10, 0xD3, 0x0F, 0xFF,//YA_Sup_ExtonSL
0x38, 5, 0x0D, 0x10, 0xD4, 0x0F, 0xFF,//YA_Sup_ExtonSR
0x38, 5, 0x0D, 0x10, 0xDA, 0x0F, 0xFF,//YA_Sup_ChionSwR
0x38, 5, 0x0D, 0x10, 0xC4, 0x0F, 0xFF,//YA_Sup_NonRL
0x38, 5, 0x0D, 0x10, 0xC5, 0x0F, 0xFF,//YA_Sup_NonRR
0x38, 5, 0x0D, 0x10, 0xE5, 0x0F, 0xFF,//YA_Sup_PDC2onFL
0x38, 5, 0x0D, 0x10, 0xE6, 0x0F, 0xFF,//YA_Sup_PDC2onFR
0x38, 5, 0x0D, 0x10, 0xE7, 0x0F, 0xFF,//YA_Sup_PDC2onRL
0x38, 5, 0x0D, 0x10, 0xE8, 0x0F, 0xFF,//YA_Sup_PDC2onRR
0x38, 5, 0x0D, 0x10, 0xE9, 0x07, 0xFA,//YA_Sup_Filta
0x38, 5, 0x0D, 0x10, 0xEA, 0x00, 0x06,//YA_Sup_Filtb
0x38, 5, 0x0D, 0x10, 0x56, 0x04, 0x00,//YA_Vol_ChanGainPFL
0x38, 5, 0x0D, 0x10, 0x57, 0x04, 0x00,//YA_Vol_ChanGainPFR
0x38, 5, 0x0D, 0x10, 0x58, 0x03, 0x2F,//YA_Vol_ChanGainPRL
0x38, 5, 0x0D, 0x10, 0x59, 0x03, 0x2F,//YA_Vol_ChanGainPRR
0x38, 5, 0x0D, 0x10, 0x5A, 0x03, 0x2F,//YA_Vol_ChanGainSwL
0x38, 5, 0x0D, 0x10, 0x5B, 0x02, 0x88,//YA_Vol_ChanGainSwR
0x38, 5, 0x0D, 0x10, 0x5C, 0x04, 0x00,//YA_Vol_ChanGainSL
0x38, 5, 0x0D, 0x10, 0x5D, 0x04, 0x00,//YA_Vol_ChanGainSR
0x38, 6, 0x0D, 0x00, 0x35, 0x00, 0x00, 0x00,//XA_Vol_Boost12dB
0x38, 5, 0x0D, 0x10, 0x25, 0x08, 0x00,//YA_Vol_BalPL
0x38, 5, 0x0D, 0x10, 0x26, 0x08, 0x00,//YA_Vol_BalPR
0x38, 5, 0x0D, 0x10, 0x2B, 0x08, 0x00,//YA_Vol_BalSL
0x38, 5, 0x0D, 0x10, 0x2C, 0x08, 0x00,//YA_Vol_BalSR
0x38, 5, 0x0D, 0x10, 0x29, 0x08, 0x00,//YA_Vol_BalSwL
0x38, 5, 0x0D, 0x10, 0x2A, 0x08, 0x00,//YA_Vol_BalSwR
0x38, 5, 0x0D, 0x10, 0x23, 0x08, 0x00,//YA_Vol_FadF
0x38, 5, 0x0D, 0x10, 0x24, 0x08, 0x00,//YA_Vol_FadR
0x38, 5, 0x0D, 0x10, 0x27, 0x08, 0x00,//YA_Vol_FadSwL
0x38, 5, 0x0D, 0x10, 0x28, 0x08, 0x00,//YA_Vol_FadSwR
0x38, 5, 0x0D, 0x10, 0x2D, 0x04, 0x00,//YA_Vol_SrcScalP
0x38, 5, 0x0D, 0x10, 0x86, 0x04, 0x00,//YA_Vol_SrcScalS
0x38, 25,0x0D, 0x10, 0x00, 0x03, 0xED, 0x07, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x1B,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0B,//XA_EasyP_Index
0x38, 25,0x0D, 0x10, 0x00, 0x03, 0xED, 0x07, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x38,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0B,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x13,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x30,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 15,0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x26,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x06,//XA_EasyP_Index
0x38, 15,0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x43,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x06,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x7F, 0x07, 0xFF,//YA_Vol_SignFL
0x38, 5, 0x0D, 0x10, 0x80, 0x07, 0xFF,//YA_Vol_SignFR
0x38, 5, 0x0D, 0x10, 0x81, 0x07, 0xFF,//YA_Vol_SignRL
0x38, 5, 0x0D, 0x10, 0x82, 0x07, 0xFF,//YA_Vol_SignRR
0x38, 5, 0x0D, 0x10, 0x83, 0x07, 0xFF,//YA_Vol_SignSwL
0x38, 5, 0x0D, 0x10, 0x84, 0x07, 0xFF,//YA_Vol_SignSwR
0x38, 6, 0x0D, 0x02, 0x8B, 0x00, 0x00, 0x00,//XA_Mute_StpAttDac
0x38, 6, 0x0D, 0x02, 0x8C, 0x00, 0x00, 0x00,//XA_Mute_StpRelDac
0x38, 6, 0x0D, 0x04, 0x10, 0x00, 0x00, 0x00,//XA_QPD_InPntr11
0x38, 6, 0x0D, 0x04, 0x11, 0x00, 0x00, 0x00,//XA_QPD_InPntr12
0x38, 6, 0x0D, 0x04, 0x10, 0x00, 0x00, 0x00,//XA_QPD_InPntr11
0x38, 6, 0x0D, 0x04, 0x11, 0x00, 0x00, 0x00,//XA_QPD_InPntr12
0x38, 5, 0x0D, 0x12, 0xE3, 0x05, 0xF2,//YA_QPD_kpL1
0x38, 5, 0x0D, 0x12, 0xE4, 0x08, 0x02,//YA_QPD_kpH1
0x38, 5, 0x0D, 0x12, 0xE5, 0x00, 0xEB,//YA_QPD_kmL1
0x38, 5, 0x0D, 0x12, 0xE6, 0x00, 0x05,//YA_QPD_kmH1
0x38, 6, 0x0D, 0x00, 0xF8, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX1
0x38, 5, 0x0D, 0x12, 0xE3, 0x05, 0xF2,//YA_QPD_kpL1
0x38, 5, 0x0D, 0x12, 0xE4, 0x08, 0x02,//YA_QPD_kpH1
0x38, 5, 0x0D, 0x12, 0xE5, 0x00, 0xEB,//YA_QPD_kmL1
0x38, 5, 0x0D, 0x12, 0xE6, 0x00, 0x05,//YA_QPD_kmH1
0x38, 6, 0x0D, 0x00, 0xF8, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX1
0x38, 5, 0x0D, 0x12, 0xE3, 0x05, 0xF2,//YA_QPD_kpL1
0x38, 5, 0x0D, 0x12, 0xE4, 0x08, 0x02,//YA_QPD_kpH1
0x38, 5, 0x0D, 0x12, 0xE5, 0x00, 0xEB,//YA_QPD_kmL1
0x38, 5, 0x0D, 0x12, 0xE6, 0x00, 0x05,//YA_QPD_kmH1
0x38, 6, 0x0D, 0x00, 0xF8, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX1
0x38, 6, 0x0D, 0x04, 0x12, 0x00, 0x00, 0x00,//XA_QPD_InPntr21
0x38, 6, 0x0D, 0x04, 0x13, 0x00, 0x00, 0x00,//XA_QPD_InPntr22
0x38, 6, 0x0D, 0x04, 0x12, 0x00, 0x00, 0x00,//XA_QPD_InPntr21
0x38, 6, 0x0D, 0x04, 0x13, 0x00, 0x00, 0x00,//XA_QPD_InPntr22
0x38, 5, 0x0D, 0x12, 0xE7, 0x05, 0xF2,//YA_QPD_kpL2
0x38, 5, 0x0D, 0x12, 0xE8, 0x08, 0x02,//YA_QPD_kpH2
0x38, 5, 0x0D, 0x12, 0xE9, 0x00, 0xEB,//YA_QPD_kmL2
0x38, 5, 0x0D, 0x12, 0xEA, 0x00, 0x05,//YA_QPD_kmH2
0x38, 6, 0x0D, 0x00, 0xFA, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX2
0x38, 5, 0x0D, 0x12, 0xE7, 0x05, 0xF2,//YA_QPD_kpL2
0x38, 5, 0x0D, 0x12, 0xE8, 0x08, 0x02,//YA_QPD_kpH2
0x38, 5, 0x0D, 0x12, 0xE9, 0x00, 0xEB,//YA_QPD_kmL2
0x38, 5, 0x0D, 0x12, 0xEA, 0x00, 0x05,//YA_QPD_kmH2
0x38, 6, 0x0D, 0x00, 0xFA, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX2
0x38, 5, 0x0D, 0x12, 0xE7, 0x05, 0xF2,//YA_QPD_kpL2
0x38, 5, 0x0D, 0x12, 0xE8, 0x08, 0x02,//YA_QPD_kpH2
0x38, 5, 0x0D, 0x12, 0xE9, 0x00, 0xEB,//YA_QPD_kmL2
0x38, 5, 0x0D, 0x12, 0xEA, 0x00, 0x05,//YA_QPD_kmH2
0x38, 6, 0x0D, 0x00, 0xFA, 0x00, 0x00, 0x6E,//XA_QPD_COUNTMAX2
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x21,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x3D,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x28,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x44,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x2F,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x4B,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x36,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x52,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x93,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xB1,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x9D,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xA7,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xA7,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xC5,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x59,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xF2, 0x00, 0x07, 0x03, 0xE4, 0x0C, 0x0E, 0x02, 0x75, 0x07, 0xF1, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x75,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x60,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x03, 0x13, 0x00, 0x0E, 0x06, 0x27, 0x0C, 0x1C, 0x03, 0x4A, 0x07, 0xE2, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x7C,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x67,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x02, 0xF7, 0x00, 0x1C, 0x05, 0xEE, 0x0C, 0x38, 0x00, 0x35, 0x07, 0xC4, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x83,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x6E,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 17,0x0D, 0x10, 0x00, 0x01, 0xB1, 0x00, 0x37, 0x03, 0x62, 0x0C, 0x6E, 0x00, 0x09, 0x07, 0x85, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0x8A,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xCF,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xE2, 0x09, 0x01, 0x03, 0x9D, 0x03, 0x2E, 0x07, 0x1E, 0x06, 0xFE, 0x04, 0x62, 0x0C, 0xD1,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xED,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xD9,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x6C, 0x0A, 0x26, 0x06, 0x70, 0x02, 0x83, 0x03, 0x94, 0x05, 0xD9, 0x01, 0x8F, 0x0D, 0x7C,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xF7,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x01, 0xE3,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0xB7, 0x0C, 0xA2, 0x05, 0x58, 0x01, 0x7E, 0x02, 0x49, 0x03, 0x5D, 0x02, 0xA8, 0x0E, 0x81,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0x01,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xE2,//XA_EasyP_Index
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0xEE,//XA_EasyP_Index
0x38, 6, 0x0D, 0x04, 0xDF, 0x00, 0x00, 0x00,//XA_SCD_InPntr00
0x38, 6, 0x0D, 0x04, 0xE0, 0x00, 0x00, 0x00,//XA_SCD_InPntr01
0x38, 6, 0x0D, 0x04, 0xE8, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh0
0x38, 7, 0x0D, 0x14, 0x98, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL0
0x38, 7, 0x0D, 0x14, 0x9A, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL0
0x38, 6, 0x0D, 0x04, 0xE1, 0x00, 0x00, 0x00,//XA_SCD_InPntr1
0x38, 6, 0x0D, 0x04, 0xE9, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh1
0x38, 7, 0x0D, 0x14, 0x9C, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL1
0x38, 7, 0x0D, 0x14, 0x9E, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL1
0x38, 6, 0x0D, 0x04, 0xE2, 0x00, 0x00, 0x00,//XA_SCD_InPntr2
0x38, 6, 0x0D, 0x04, 0xEA, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh2
0x38, 7, 0x0D, 0x14, 0xA0, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL2
0x38, 7, 0x0D, 0x14, 0xA2, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL2
0x38, 6, 0x0D, 0x04, 0xE3, 0x00, 0x00, 0x00,//XA_SCD_InPntr3
0x38, 6, 0x0D, 0x04, 0xEB, 0x7F, 0xFF, 0xFF,//XA_SCD_Thresh3
0x38, 7, 0x0D, 0x14, 0xA4, 0x03, 0x49, 0x08, 0x05,//YA_SCD_kpL3
0x38, 7, 0x0D, 0x14, 0xA6, 0x02, 0xD2, 0x00, 0x0A,//YA_SCD_kmL3
0x38, 6, 0x0D, 0x01, 0xC7, 0x00, 0x00, 0x01,//XA_FCLim_FlgGenDSPIO_Polarity
0x38, 6, 0x0D, 0x01, 0xC8, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR (Mask 0)
0x38, 6, 0x0D, 0x01, 0xC8, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR (Mask 1)
0x38, 6, 0x0D, 0x01, 0xC8, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR (Mask 2)
0x38, 6, 0x0D, 0x01, 0xC8, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskFR (Mask 3)
0x38, 6, 0x0D, 0x01, 0xC9, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwL (Mask 0)
0x38, 6, 0x0D, 0x01, 0xC9, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwL (Mask 1)
0x38, 6, 0x0D, 0x01, 0xC9, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwL (Mask 2)
0x38, 6, 0x0D, 0x01, 0xC9, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwL (Mask 3)
0x38, 6, 0x0D, 0x01, 0xCA, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR (Mask 0)
0x38, 6, 0x0D, 0x01, 0xCA, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR (Mask 1)
0x38, 6, 0x0D, 0x01, 0xCA, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR (Mask 2)
0x38, 6, 0x0D, 0x01, 0xCA, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskSwR (Mask 3)
0x38, 6, 0x0D, 0x01, 0xCB, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS (Mask 0)
0x38, 6, 0x0D, 0x01, 0xCB, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS (Mask 1)
0x38, 6, 0x0D, 0x01, 0xCB, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS (Mask 2)
0x38, 6, 0x0D, 0x01, 0xCB, 0x00, 0x00, 0x00,//XA_FCLim_FlgGenMaskRS (Mask 3)
0x38, 7, 0x0D, 0x10, 0x9B, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLFR
0x38, 7, 0x0D, 0x10, 0x99, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLFR
0x38, 7, 0x0D, 0x10, 0x9F, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLSwL
0x38, 7, 0x0D, 0x10, 0x9D, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLSwL
0x38, 7, 0x0D, 0x10, 0xA3, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLSwR
0x38, 7, 0x0D, 0x10, 0xA1, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLSwR
0x38, 7, 0x0D, 0x10, 0xA7, 0x05, 0x56, 0x03, 0xFA,//YA_FCLim_AttLRS
0x38, 7, 0x0D, 0x10, 0xA5, 0x01, 0xB6, 0x04, 0x00,//YA_FCLim_DecLRS
0x38, 6, 0x0D, 0x01, 0xBF, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainFR
0x38, 6, 0x0D, 0x01, 0xC1, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainSwL
0x38, 6, 0x0D, 0x01, 0xC3, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainSwR
0x38, 6, 0x0D, 0x01, 0xC5, 0xF3, 0x33, 0x33,//XA_FCLim_MinGainRS
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0xD1, 0x00, 0x22, 0x00, 0xD1, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x04, 0xBB, 0x03, 0x77, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x4D,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x01, 0xDA, 0x00, 0x40, 0x01, 0xDA, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x57,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0xD1, 0x00, 0x22, 0x00, 0xD1, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x04, 0xBB, 0x03, 0x77, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x61,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x01, 0xDA, 0x00, 0x40, 0x01, 0xDA, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x02, 0xFF, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x6B,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 5, 0x0D, 0x10, 0x0C, 0x07, 0xFF,//YA_DCfilt_a1A
0x38, 5, 0x0D, 0x10, 0x0E, 0x08, 0x01,//YA_DCfilt_b0A
0x38, 5, 0x0D, 0x10, 0x0D, 0x08, 0x01,//YA_DCfilt_b1A
0x38, 5, 0x0D, 0x10, 0x0F, 0x07, 0xFF,//YA_DCfilt_a1B
0x38, 5, 0x0D, 0x10, 0x11, 0x08, 0x01,//YA_DCfilt_b0B
0x38, 5, 0x0D, 0x10, 0x10, 0x08, 0x01,//YA_DCfilt_b1B
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x5E,//XA_EasyP_Index
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x66,//XA_EasyP_Index
//INFO: Init the delay settings for 2 channel delay
0x38, 6, 0x0D, 0x05, 0x62, 0x00, 0x00, 0x01,//XA_Delay_Length1_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x05, 0x63, 0x00, 0x00, 0x01,//XA_Delay_Length2_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x05, 0x64, 0x00, 0x00, 0x01,//XA_Delay_Length3_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x05, 0x65, 0x00, 0x00, 0x01,//XA_Delay_Length4_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x05, 0x66, 0x00, 0x00, 0x01,//XA_Delay_Length5_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x05, 0x67, 0x00, 0x00, 0x01,//XA_Delay_Length6_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0x38, 6, 0x0D, 0x03, 0xFD, 0x00, 0x00, 0x00,//XA_GPF_LInPntr
0x38, 6, 0x0D, 0x03, 0xFE, 0x00, 0x00, 0x00,//XA_GPF_RInPntr
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0x33,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 23,0x0D, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//YA_OFFSET
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0x3D,//XA_SrcSw_OrDigSrcSelMask
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0A,//XA_EasyP_Index
0x38, 6, 0x0D, 0x04, 0x23, 0x00, 0x00, 0xF3,//XA_Gsa_InPntr
0x38, 5, 0x0D, 0x13, 0x5D, 0x01, 0x1B,//YA_Gsa_b01L
0x38, 5, 0x0D, 0x13, 0x60, 0x00, 0x01,//YA_Gsa_b01H
0x38, 5, 0x0D, 0x13, 0x5C, 0x02, 0x37,//YA_Gsa_a21L
0x38, 5, 0x0D, 0x13, 0x5F, 0x0C, 0x02,//YA_Gsa_a21H
0x38, 5, 0x0D, 0x13, 0x5B, 0x05, 0x22,//YA_Gsa_a11L
0x38, 5, 0x0D, 0x13, 0x5E, 0x07, 0xFD,//YA_Gsa_a11H
0x38, 5, 0x0D, 0x13, 0x63, 0x02, 0x32,//YA_Gsa_b02L
0x38, 5, 0x0D, 0x13, 0x66, 0x00, 0x02,//YA_Gsa_b02H
0x38, 5, 0x0D, 0x13, 0x62, 0x04, 0x64,//YA_Gsa_a22L
0x38, 5, 0x0D, 0x13, 0x65, 0x0C, 0x04,//YA_Gsa_a22H
0x38, 5, 0x0D, 0x13, 0x61, 0x01, 0x04,//YA_Gsa_a12L
0x38, 5, 0x0D, 0x13, 0x64, 0x07, 0xFB,//YA_Gsa_a12H
0x38, 5, 0x0D, 0x13, 0x69, 0x04, 0x50,//YA_Gsa_b03L
0x38, 5, 0x0D, 0x13, 0x6C, 0x00, 0x04,//YA_Gsa_b03H
0x38, 5, 0x0D, 0x13, 0x68, 0x00, 0xA0,//YA_Gsa_a23L
0x38, 5, 0x0D, 0x13, 0x6B, 0x0C, 0x09,//YA_Gsa_a23H
0x38, 5, 0x0D, 0x13, 0x67, 0x05, 0x07,//YA_Gsa_a13L
0x38, 5, 0x0D, 0x13, 0x6A, 0x07, 0xF5,//YA_Gsa_a13H
0x38, 5, 0x0D, 0x13, 0x6F, 0x00, 0x09,//YA_Gsa_b04
0x38, 5, 0x0D, 0x13, 0x6E, 0x0C, 0x12,//YA_Gsa_a24
0x38, 5, 0x0D, 0x13, 0x6D, 0x07, 0xE9,//YA_Gsa_a14
0x38, 5, 0x0D, 0x13, 0x72, 0x00, 0x12,//YA_Gsa_b05
0x38, 5, 0x0D, 0x13, 0x71, 0x0C, 0x24,//YA_Gsa_a25
0x38, 5, 0x0D, 0x13, 0x70, 0x07, 0xC8,//YA_Gsa_a15
0x38, 5, 0x0D, 0x13, 0x75, 0x00, 0x23,//YA_Gsa_b06
0x38, 5, 0x0D, 0x13, 0x74, 0x0C, 0x46,//YA_Gsa_a26
0x38, 5, 0x0D, 0x13, 0x73, 0x07, 0x6A,//YA_Gsa_a16
0x38, 5, 0x0D, 0x13, 0x78, 0x00, 0x44,//YA_Gsa_b07
0x38, 5, 0x0D, 0x13, 0x77, 0x0C, 0x88,//YA_Gsa_a27
0x38, 5, 0x0D, 0x13, 0x76, 0x06, 0x4A,//YA_Gsa_a17
0x38, 5, 0x0D, 0x13, 0x7B, 0x00, 0x80,//YA_Gsa_b08
0x38, 5, 0x0D, 0x13, 0x7A, 0x0C, 0xFF,//YA_Gsa_a28
0x38, 5, 0x0D, 0x13, 0x79, 0x02, 0xED,//YA_Gsa_a18
0x38, 5, 0x0D, 0x13, 0x7E, 0x00, 0xEA,//YA_Gsa_b09
0x38, 5, 0x0D, 0x13, 0x7D, 0x0D, 0xD4,//YA_Gsa_a29
0x38, 5, 0x0D, 0x13, 0x7C, 0x0B, 0xFB,//YA_Gsa_a19
0x38, 5, 0x0D, 0x13, 0x5A, 0x01, 0x00,//YA_Gsa_ga
0x38, 7, 0x0D, 0x13, 0x91, 0x02, 0x2C, 0x08, 0x44,//YA_Gsa_KpL
0x38, 7, 0x0D, 0x13, 0x93, 0x06, 0xA3, 0x00, 0x84,//YA_Gsa_KmL
0x38, 5, 0x0D, 0x10, 0x6D, 0x08, 0x00,//YA_Mute_P
0x38, 6, 0x0D, 0x00, 0x3F, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelP
0x38, 6, 0x0D, 0x00, 0x3E, 0x00, 0x76, 0xE3,//XA_Mute_StpAttP
0x38, 5, 0x0D, 0x10, 0x6E, 0x08, 0x00,//YA_Mute_S
0x38, 6, 0x0D, 0x00, 0x42, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelS
0x38, 6, 0x0D, 0x00, 0x41, 0x00, 0x76, 0xE3,//XA_Mute_StpAttS
0x38, 5, 0x0D, 0x10, 0x6F, 0x08, 0x00,//YA_Mute_N
0x38, 6, 0x0D, 0x00, 0x45, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelN
0x38, 6, 0x0D, 0x00, 0x44, 0x00, 0x76, 0xE3,//XA_Mute_StpAttN
0x38, 5, 0x0D, 0x10, 0x70, 0x08, 0x00,//YA_Mute_T
0x38, 6, 0x0D, 0x00, 0x48, 0x00, 0x0B, 0xE3,//XA_Mute_StpRelT
0x38, 6, 0x0D, 0x00, 0x47, 0x00, 0x76, 0xE3,//XA_Mute_StpAttT
0x38, 5, 0x0D, 0x10, 0x71, 0x08, 0x00,//YA_MuteSix_FL
0x38, 5, 0x0D, 0x10, 0x72, 0x08, 0x00,//YA_MuteSix_FR
0x38, 5, 0x0D, 0x10, 0x73, 0x08, 0x00,//YA_MuteSix_RL
0x38, 5, 0x0D, 0x10, 0x74, 0x08, 0x00,//YA_MuteSix_RR
0x38, 5, 0x0D, 0x10, 0x75, 0x08, 0x00,//YA_MuteSix_SwL
0x38, 5, 0x0D, 0x10, 0x76, 0x08, 0x00,//YA_MuteSix_SwR
0x38, 6, 0x0D, 0x00, 0x4B, 0x00, 0x17, 0xC7,//XA_MuteSix_StpRel
0x38, 6, 0x0D, 0x00, 0x4A, 0x00, 0xED, 0xC6,//XA_MuteSix_StpAtt
//INFO: Ready initialising all audio features
0
};

//<YA_Vol_Main1P> 0D 10 50 2个字节
//<YA_Vol_Main2P> 0D 10 51 2个字节
//<YA_Vol_Main1S> 0D 10 52 2个字节
//<YA_Vol_Main2S> 0D 10 53 2个字节
const BYTE SAF7741_Volume_Data[]={
0x0F, 0xAD, 0x00, 0x08,//-60dB
0x0F, 0xA1, 0x00, 0x08,//-58.79dB
0x0F, 0x92, 0x00, 0x08,//-57.59dB
0x0F, 0x82, 0x00, 0x08,//-56.38dB
0x0F, 0x6F, 0x00, 0x08,//-55.17dB
0x0F, 0x5A, 0x00, 0x08,//-53.79dB
0x0F, 0x41, 0x00, 0x08,//-52.76dB
0x0F, 0x24, 0x00, 0x08,//-51.56dB
0x0F, 0x04, 0x00, 0x08,//-50.35dB
0x0E, 0xDE, 0x00, 0x08,//-49.14dB
0x0E, 0xB3, 0x00, 0x08,//-47.94dB
0x0E, 0x81, 0x00, 0x08,//-46.73dB
0x0E, 0x48, 0x00, 0x08,//-45.52dB
0x0E, 0x07, 0x00, 0x08,//-44.32dB
0x0E, 0x00, 0x00, 0x09,//-43.11dB
0x0E, 0x00, 0x00, 0x0A,//-41.90dB
0x0E, 0x00, 0x00, 0x0C,//-40.70dB
0x0E, 0x00, 0x00, 0x0E,//-39.49dB
0x0E, 0x00, 0x00, 0x10,//-38.29dB
0x0E, 0x00, 0x00, 0x12,//-37.08dB
0x0E, 0x00, 0x00, 0x15,//-35.87dB
0x0E, 0x00, 0x00, 0x18,//-34.67dB
0x0E, 0x00, 0x00, 0x1C,//-33.46dB
0x0E, 0x00, 0x00, 0x20,//-32.25dB
0x0E, 0x00, 0x00, 0x24,//-31.05dB
0x0E, 0x00, 0x00, 0x2A,//-29.84dB
0x0E, 0x00, 0x00, 0x30,//-28.63dB
0x0E, 0x00, 0x00, 0x37,//-27.43dB
0x0E, 0x00, 0x00, 0x3F,//-26.22dB
0x0E, 0x00, 0x00, 0x49,//-25.02dB
0x0E, 0x00, 0x00, 0x54,//-23.81dB
0x0E, 0x00, 0x00, 0x60,//-22.60dB
0x0E, 0x00, 0x00, 0x6F,//-21.40dB
0x0E, 0x00, 0x00, 0x7F,//-20.19dB
0x0E, 0x00, 0x00, 0x92,//-18.98dB
0x0E, 0x00, 0x00, 0xA8,//-17.78dB
0x0E, 0x00, 0x00, 0xC1,//-16.57dB
0x0E, 0x00, 0x00, 0xDD,//-15.37dB
0x0E, 0x00, 0x00, 0xFE,//-14.16dB
0x0E, 0x00, 0x01, 0x24,//-12.95dB
0x0D, 0xEE, 0x01, 0x45,//-11.75dB
0x0D, 0x9F, 0x01, 0x45,//-10.54dB
0x0D, 0x45, 0x01, 0x45,//-9.33dB
0x0C, 0xDD, 0x01, 0x45,//-8.13dB
0x0C, 0x65, 0x01, 0x45,//-6.92dB
0x0B, 0xDB, 0x01, 0x45,//-5.71dB
0x0B, 0x3D, 0x01, 0x45,//-4.51dB
0x0A, 0x88, 0x01, 0x45,//-3.30dB
0x09, 0xB7, 0x01, 0x45,//-2.10dB
0x08, 0xC7, 0x01, 0x45,//-0.89dB

0x08, 0x00, 0x01, 0x45,//0dB

0x08, 0x00, 0x01, 0x83,//1.52dB	
0x08, 0x00, 0x01, 0xBC,//2.73dB		
0x08, 0x00, 0x01, 0xFF,//3.94dB	
0x08, 0x00, 0x02, 0x4B,//5.14dB	
0x08, 0x00, 0x02, 0xA2,//6.35dB
0x08, 0x00, 0x03, 0x07,//7.56dB
0x08, 0x00, 0x03, 0x7A,//8.76dB
0x08, 0x00, 0x03, 0xFF,//9.97dB
0x08, 0x00, 0x04, 0x97,//11.17dB
0x08, 0x00, 0x05, 0x46,//12.38dB
0x08, 0x00, 0x06, 0x0F,//13.59dB
0x08, 0x00, 0x06, 0xF6,//14.79dB
0x08, 0x00, 0x07, 0xFF//16.00dB
};

//<YA_Vol_BalPL> 0D 10 25 2个字节
//<YA_Vol_BalPR> 0D 10 26 2个字节
//<YA_Vol_BalSL> 0D 10 2B 2个字节
//<YA_Vol_BalSR> 0D 10 2C 2个字节
//<YA_Vol_FadF> 0D 10 23 2个字节
//<YA_Vol_FadR> 0D 10 24 2个字节
const BYTE SAF7741_Balance_Fader_Data_P[]={
//0x08, 0x00, 0x0F, 0xFF,//-66.0dB ~ -63.0dB
//0x08, 0x00, 0x0F, 0xFE,//-62.0dB ~ -59.0dB
//0x08, 0x00, 0x0F, 0xFD,//-58.0dB ~ -56.0dB
//0x08, 0x00, 0x0F, 0xFC,//-55.0dB ~ -54.0dB
//0x08, 0x00, 0x0F, 0xFB,//-53.0dB ~ -52.0dB
//0x08, 0x00, 0x0F, 0xFA,//-51.0dB ~ -50.0dB
//0x08, 0x00, 0x0F, 0xF9,//-49.0dB
//0x08, 0x00, 0x0F, 0xF8,//-48.0dB
//0x08, 0x00, 0x0F, 0xF7,//-47.0dB
//0x08, 0x00, 0x0F, 0xF6,//-46.0dB
//0x08, 0x00, 0x0F, 0xF4,//-45.0dB
//0x08, 0x00, 0x0F, 0xF3,//-44.0dB
//0x08, 0x00, 0x0F, 0xF2,//-43.0dB
//0x08, 0x00, 0x0F, 0xF0,//-42.0dB
//0x08, 0x00, 0x0F, 0xEE,//-41.0dB
//0x08, 0x00, 0x0F, 0xEC,//-40.0dB
//0x08, 0x00, 0x0F, 0xE9,//-39.0dB
//0x08, 0x00, 0x0F, 0xE6,//-38.0dB
//0x08, 0x00, 0x0F, 0xE3,//-37.0dB
//0x08, 0x00, 0x0F, 0xE0,//-36.0dB
//0x08, 0x00, 0x0F, 0xDC,//-35.0dB
//0x08, 0x00, 0x0F, 0xD7,//-34.0dB
//0x08, 0x00, 0x0F, 0xD2,//-33.0dB
//0x08, 0x00, 0x0F, 0xCD,//-32.0dB
//0x08, 0x00, 0x0F, 0xC6,//-31.0dB
//0x08, 0x00, 0x0F, 0xBF,//-30.0dB
//0x08, 0x00, 0x0F, 0xB7,//-29.0dB
//0x08, 0x00, 0x0F, 0xAE,//-28.0dB
//0x08, 0x00, 0x0F, 0xA5,//-27.0dB
//0x08, 0x00, 0x0F, 0x99,//-26.0dB
//0x08, 0x00, 0x0F, 0x8D,//-25.0dB
//0x08, 0x00, 0x0F, 0x7F,//-24.0dB
//0x08, 0x00, 0x0F, 0x6F,//-23.0dB
//0x08, 0x00, 0x0F, 0x5D,//-22.0dB
//0x08, 0x00, 0x0F, 0x49,//-21.0dB
0x08, 0x00, 0x0F, 0x33,//-20.0dB
//0x08, 0x00, 0x0F, 0x1A,//-19.0dB
0x08, 0x00, 0x0E, 0xFE,//-18.0dB
//0x08, 0x00, 0x0E, 0xDF,//-17.0dB
0x08, 0x00, 0x0E, 0xBB,//-16.0dB
//0x08, 0x00, 0x0E, 0x94,//-15.0dB
0x08, 0x00, 0x0E, 0x67,//-14.0dB
//0x08, 0x00, 0x0E, 0x36,//-13.0dB
0x08, 0x00, 0x0D, 0xFE,//-12.0dB
//0x08, 0x00, 0x0D, 0xBF,//-11.0dB
0x08, 0x00, 0x0D, 0x78,//-10.0dB
//0x08, 0x00, 0x0D, 0x29,//-9.0dB
0x08, 0x00, 0x0C, 0xD1,//-8.0dB
//0x08, 0x00, 0x0C, 0x6D,//-7.0dB
0x08, 0x00, 0x0B, 0xFE,//-6.0dB
//0x08, 0x00, 0x0B, 0x80,//-5.0dB
0x08, 0x00, 0x0A, 0xF4,//-4.0dB
//0x08, 0x00, 0x0A, 0x56,//-3.0dB
0x08, 0x00, 0x09, 0xA5,//-2.0dB
//0x08, 0x00, 0x08, 0xDF,//-1.0dB
//
0x08, 0x00, 0x08, 0x00,//0dB
//
//0x08, 0xDF, 0x08, 0x00,//1.0dB
0x09, 0xA5, 0x08, 0x00,//2.0dB
//0x0A, 0x56, 0x08, 0x00,//3.0dB
0x0A, 0xF4, 0x08, 0x00,//4.0dB
//0x0B, 0x80, 0x08, 0x00,//5.0dB
0x0B, 0xFE, 0x08, 0x00,//6.0dB
//0x0C, 0x6D, 0x08, 0x00,//7.0dB
0x0C, 0xD1, 0x08, 0x00,//8.0dB
//0x0D, 0x29, 0x08, 0x00,//9.0dB
0x0D, 0x78, 0x08, 0x00,//10.0dB
//0x0D, 0xBF, 0x08, 0x00,//11.0dB
0x0D, 0xFE, 0x08, 0x00,//12.0dB
//0x0E, 0x36, 0x08, 0x00,//13.0dB
0x0E, 0x67, 0x08, 0x00,//14.0dB
//0x0E, 0x94, 0x08, 0x00,//15.0dB
0x0E, 0xBB, 0x08, 0x00,//16.0dB
//0x0E, 0xDF, 0x08, 0x00,//17.0dB
0x0E, 0xFE, 0x08, 0x00,//18.0dB
//0x0F, 0x1A, 0x08, 0x00,//19.0dB
0x0F, 0x33, 0x08, 0x00,//20.0dB
//0x0F, 0x49, 0x08, 0x00,//21.0dB
//0x0F, 0x5D, 0x08, 0x00,//22.0dB
//0x0F, 0x6F, 0x08, 0x00,//23.0dB
//0x0F, 0x7F, 0x08, 0x00,//24.0dB
//0x0F, 0x8D, 0x08, 0x00,//25.0dB
//0x0F, 0x99, 0x08, 0x00,//26.0dB
//0x0F, 0xA5, 0x08, 0x00,//27.0dB
//0x0F, 0xAE, 0x08, 0x00,//28.0dB
//0x0F, 0xB7, 0x08, 0x00,//29.0dB
//0x0F, 0xBF, 0x08, 0x00,//30.0dB
//0x0F, 0xC6, 0x08, 0x00,//31.0dB
//0x0F, 0xCD, 0x08, 0x00,//32.0dB
//0x0F, 0xD2, 0x08, 0x00,//33.0dB
//0x0F, 0xD7, 0x08, 0x00,//34.0dB
//0x0F, 0xDC, 0x08, 0x00,//35.0dB
//0x0F, 0xE0, 0x08, 0x00,//36.0dB
//0x0F, 0xE3, 0x08, 0x00,//37.0dB
//0x0F, 0xE6, 0x08, 0x00,//38.0dB
//0x0F, 0xE9, 0x08, 0x00,//39.0dB
//0x0F, 0xEC, 0x08, 0x00,//40.0dB
//0x0F, 0xEE, 0x08, 0x00,//41.0dB
//0x0F, 0xF0, 0x08, 0x00,//42.0dB
//0x0F, 0xF2, 0x08, 0x00,//43.0dB
//0x0F, 0xF3, 0x08, 0x00,//44.0dB
//0x0F, 0xF4, 0x08, 0x00,//45.0dB
//0x0F, 0xF6, 0x08, 0x00,//46.0dB
//0x0F, 0xF7, 0x08, 0x00,//47.0dB
//0x0F, 0xF8, 0x08, 0x00,//48.0dB
//0x0F, 0xF9, 0x08, 0x00,//49.0dB
//0x0F, 0xFA, 0x08, 0x00,//50.0dB ~ 51.0dB
//0x0F, 0xFB, 0x08, 0x00,//52.0dB ~ 53.0dB
//0x0F, 0xFC, 0x08, 0x00,//54.0dB ~ 55.0dB
//0x0F, 0xFD, 0x08, 0x00,//56.0dB ~ 58.0dB
//0x0F, 0xFE, 0x08, 0x00,//59.0dB ~ 62.0dB
//0x0F, 0xFF, 0x08, 0x00//63.0dB ~ 66.0dB
};

//(ToneControl Scaling Prim)
//<YA_Vol_DesScalBMTP> 0D 10 77 2个字节
//<YA_Vol_DesScalBMTS> 0D 10 7B 2个字节
//for YA_Vol_DesScalBMTP,YA_Vol_DesScalBMTS(Bass,Middle,Treble)
//每一次更新Bass或Middle或Treble,
//都要更新DesScalBMT，取Bass,Middle,Treble中增益最大的
const BYTE SAF7741_DesScalBMT_Data[]={
0x07, 0xFF,//0dB
0x06, 0x5B,//1.0dB
0x05, 0xAA,//2.0dB
0x05, 0x0C,//3.0dB
0x05, 0x12,//4.0dB
0x04, 0x80,//5.0dB 
0x04, 0x02,//6.0dB
0x03, 0x93,//7.0dB
0x03, 0x2F,//8.0dB
0x02, 0xD7,//9.0dB
0x02, 0x88,//10.0dB
0x02, 0x41,//11.0dB
0x02, 0x02//12.0dB
};

//<YA_BMT_GbasP> 0D 14 25 2个字节
//<YA_BMT_GbasS> 0D 14 42 2个字节
//for 60Hz,80Hz,100Hz
const BYTE SAF7741_Bass_Data_P[]={
//0x0E, 0x80,//-12.0dB
//0x0E, 0xB8,//-11.0dB
//0x0E, 0xE9,//-10.0dB
//0x0F, 0x16,//-9.0dB
//0x0F, 0x3D,//-8.0dB
//0x0F, 0x60,//-7.0dB
//0x0F, 0x7F,//-6.0dB
//0x0F, 0x9B,//-5.0dB
//0x0F, 0xB4,//-4.0dB
//0x0F, 0xCA,//-3.0dB
//0x0F, 0xDE,//-2.0dB
//0x0F, 0xF0,//-1.0dB
//0x0F, 0xFF,//0dB
//0x00, 0x0F,//1.0dB
//0x00, 0x20,//2.0dB
0x00, 0x34,//3.0dB
0x00, 0x4A,//4.0dB
0x00, 0x63,//5.0dB
0x00, 0x7E,//6.0dB
0x00, 0x9D,//7.0dB
0x00, 0xC0,//8.0dB
0x00, 0xE7,//9.0dB
0x01, 0x13,//10.0dB
0x01, 0x44,//11.0dB
0x01, 0x7B//12.0dB
};

const BYTE BassFreqsel[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x1B,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x0B,//<EasyP_Index>
//YA_OFFSET
0x38, 25, 0x0D, 0x10, 0x00, 0x03, 0xF7, 0x02, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0xDD, 0x00, 0x04, 0x02, 0xDD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//60Hz  最后两字节代表增益
0x38, 25, 0x0D, 0x10, 0x00, 0x03, 0xF4, 0x03, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x06, 0x6C, 0x00, 0x05, 0x06, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,//80Hz
0x38, 25, 0x0D, 0x10, 0x00, 0x03, 0xF1, 0x04, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0xF2, 0x00, 0x07, 0x01, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00//100Hz
};

const BYTE SAF7741_Mid_800_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x13,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x7A, 0x03, 0x84, 0x0D, 0x7A, 0x05, 0xD4, 0x00, 0xBD, 0x02, 0xEA, 0x0F, 0xA0,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x9C, 0x03, 0xCF, 0x0D, 0x58, 0x03, 0xC2, 0x00, 0xAC, 0x01, 0xE1, 0x0F, 0xA4,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xBC, 0x00, 0x16, 0x0D, 0x38, 0x05, 0xD5, 0x00, 0x9C, 0x02, 0xEB, 0x0F, 0xA8,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xD9, 0x00, 0xFC, 0x0D, 0x1B, 0x03, 0x6A, 0x00, 0x8D, 0x05, 0xB5, 0x0F, 0xAD,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xF3, 0x07, 0x49, 0x0D, 0x00, 0x03, 0xB6, 0x00, 0x80, 0x01, 0xDB, 0x0F, 0xB3,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x0C, 0x03, 0xE1, 0x0C, 0xE7, 0x05, 0xD6, 0x00, 0x73, 0x06, 0xEB, 0x0F, 0xB9,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x22, 0x07, 0xB9, 0x0C, 0xD1, 0x00, 0xD1, 0x00, 0x68, 0x04, 0x69, 0x0F, 0xC0,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x37, 0x03, 0xD4, 0x0C, 0xBC, 0x03, 0xA4, 0x00, 0x5E, 0x01, 0xD2, 0x0F, 0xC8,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x4A, 0x01, 0x3A, 0x0C, 0xA9, 0x05, 0x45, 0x00, 0x54, 0x06, 0xA2, 0x0F, 0xD1,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x5B, 0x00, 0xF2, 0x0C, 0x98, 0x04, 0xAA, 0x00, 0x4C, 0x02, 0x55, 0x0F, 0xDB,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x6A, 0x04, 0x00, 0x0C, 0x89, 0x00, 0xCE, 0x00, 0x44, 0x04, 0x67, 0x0F, 0xE6,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x78, 0x03, 0x61, 0x0C, 0x7B, 0x00, 0xB2, 0x00, 0x3D, 0x04, 0x59, 0x0F, 0xF2,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x10,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x21,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x35,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x4B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x64,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x7F,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x9F,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xC2,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xE9,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x15,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x46,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x7E//12.0dB
};


const BYTE SAF7741_Mid_500_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x13,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xFD, 0x00, 0xDB, 0x0C, 0xFE, 0x02, 0xBF, 0x00, 0x7F, 0x01, 0x5F, 0x0F, 0xA0,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x15, 0x04, 0xCF, 0x0C, 0xE5, 0x06, 0x4C, 0x00, 0x72, 0x07, 0x26, 0x0F, 0xA4,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x2C, 0x00, 0x07, 0x0C, 0xCF, 0x02, 0x9F, 0x00, 0x67, 0x05, 0x50, 0x0F, 0xA8,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x40, 0x03, 0x88, 0x0C, 0xBA, 0x06, 0xB4, 0x00, 0x5D, 0x03, 0x5A, 0x0F, 0xAD,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x53, 0x00, 0x5A, 0x0C, 0xA8, 0x01, 0x81, 0x00, 0x54, 0x00, 0xC1, 0x0F, 0xB3,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x63, 0x07, 0x86, 0x0C, 0x97, 0x01, 0xFD, 0x00, 0x4B, 0x04, 0xFE, 0x0F, 0xB9,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x73, 0x02, 0x11, 0x0C, 0x87, 0x07, 0x22, 0x00, 0x43, 0x07, 0x91, 0x0F, 0xC0,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x81, 0x00, 0xF7, 0x0C, 0x79, 0x07, 0xF4, 0x00, 0x3C, 0x07, 0xFA, 0x0F, 0xC8,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x8D, 0x05, 0x2C, 0x0C, 0x6D, 0x03, 0x7D, 0x00, 0x36, 0x05, 0xBF, 0x0F, 0xD1,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x98, 0x07, 0x97, 0x0C, 0x62, 0x00, 0xD7, 0x00, 0x31, 0x00, 0x6C, 0x0F, 0xDB,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xA3, 0x01, 0x13, 0x0C, 0x57, 0x07, 0x27, 0x00, 0x2B, 0x07, 0x94, 0x0F, 0xE6,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xAC, 0x02, 0x6A, 0x0C, 0x4E, 0x05, 0xA0, 0x00, 0x27, 0x02, 0xD0, 0x0F, 0xF2,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x10,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x21,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x35,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x4B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x64,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x7F,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0x9F,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0xC2,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x00, 0xE9,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x01, 0x15,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x01, 0x46,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB4, 0x04, 0x5D, 0x0C, 0x46, 0x03, 0x82, 0x00, 0x23, 0x01, 0xC1, 0x01, 0x7E//12.0dB
};
const BYTE SAF7741_Mid_1000_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x13,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x7A, 0x03, 0x84, 0x0D, 0x7A, 0x05, 0xD4, 0x00, 0xBD, 0x02, 0xEA, 0x0F, 0xA0,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x9C, 0x03, 0xCF, 0x0D, 0x58, 0x03, 0xC2, 0x00, 0xAC, 0x01, 0xE1, 0x0F, 0xA4,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xBC, 0x00, 0x16, 0x0D, 0x38, 0x05, 0xD5, 0x00, 0x9C, 0x02, 0xEB, 0x0F, 0xA8,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xD9, 0x00, 0xFC, 0x0D, 0x1B, 0x03, 0x6A, 0x00, 0x8D, 0x05, 0xB5, 0x0F, 0xAD,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xF3, 0x07, 0x49, 0x0D, 0x00, 0x03, 0xB6, 0x00, 0x80, 0x01, 0xDB, 0x0F, 0xB3,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x0C, 0x03, 0xE1, 0x0C, 0xE7, 0x05, 0xD6, 0x00, 0x73, 0x06, 0xEB, 0x0F, 0xB9,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x22, 0x07, 0xB9, 0x0C, 0xD1, 0x00, 0xD1, 0x00, 0x68, 0x04, 0x69, 0x0F, 0xC0,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x37, 0x03, 0xD4, 0x0C, 0xBC, 0x03, 0xA4, 0x00, 0x5E, 0x01, 0xD2, 0x0F, 0xC8,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x4A, 0x01, 0x3A, 0x0C, 0xA9, 0x05, 0x45, 0x00, 0x54, 0x06, 0xA2, 0x0F, 0xD1,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x5B, 0x00, 0xF2, 0x0C, 0x98, 0x04, 0xAA, 0x00, 0x4C, 0x02, 0x55, 0x0F, 0xDB,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x6A, 0x04, 0x00, 0x0C, 0x89, 0x00, 0xCE, 0x00, 0x44, 0x04, 0x67, 0x0F, 0xE6,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x78, 0x03, 0x61, 0x0C, 0x7B, 0x00, 0xB2, 0x00, 0x3D, 0x04, 0x59, 0x0F, 0xF2,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x10,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x21,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x35,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x4B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x64,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x7F,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x9F,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xC2,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xE9,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x15,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x46,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x7E//12.0dB
};
const BYTE SAF7741_Mid_1500_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x13,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x7A, 0x03, 0x84, 0x0D, 0x7A, 0x05, 0xD4, 0x00, 0xBD, 0x02, 0xEA, 0x0F, 0xA0,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x9C, 0x03, 0xCF, 0x0D, 0x58, 0x03, 0xC2, 0x00, 0xAC, 0x01, 0xE1, 0x0F, 0xA4,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xBC, 0x00, 0x16, 0x0D, 0x38, 0x05, 0xD5, 0x00, 0x9C, 0x02, 0xEB, 0x0F, 0xA8,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xD9, 0x00, 0xFC, 0x0D, 0x1B, 0x03, 0x6A, 0x00, 0x8D, 0x05, 0xB5, 0x0F, 0xAD,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xF3, 0x07, 0x49, 0x0D, 0x00, 0x03, 0xB6, 0x00, 0x80, 0x01, 0xDB, 0x0F, 0xB3,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x0C, 0x03, 0xE1, 0x0C, 0xE7, 0x05, 0xD6, 0x00, 0x73, 0x06, 0xEB, 0x0F, 0xB9,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x22, 0x07, 0xB9, 0x0C, 0xD1, 0x00, 0xD1, 0x00, 0x68, 0x04, 0x69, 0x0F, 0xC0,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x37, 0x03, 0xD4, 0x0C, 0xBC, 0x03, 0xA4, 0x00, 0x5E, 0x01, 0xD2, 0x0F, 0xC8,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x4A, 0x01, 0x3A, 0x0C, 0xA9, 0x05, 0x45, 0x00, 0x54, 0x06, 0xA2, 0x0F, 0xD1,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x5B, 0x00, 0xF2, 0x0C, 0x98, 0x04, 0xAA, 0x00, 0x4C, 0x02, 0x55, 0x0F, 0xDB,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x6A, 0x04, 0x00, 0x0C, 0x89, 0x00, 0xCE, 0x00, 0x44, 0x04, 0x67, 0x0F, 0xE6,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x78, 0x03, 0x61, 0x0C, 0x7B, 0x00, 0xB2, 0x00, 0x3D, 0x04, 0x59, 0x0F, 0xF2,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x10,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x21,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x35,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x4B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x64,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x7F,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0x9F,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xC2,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x00, 0xE9,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x15,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x46,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x85, 0x00, 0x09, 0x0C, 0x6E, 0x03, 0x62, 0x00, 0x37, 0x01, 0xB1, 0x01, 0x7E//12.0dB
};
const BYTE SAF7741_Treble_10k_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x26,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x06,//<EasyP_Index>
//YA_OFFSET
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x58, 0x00, 0x00, 0x03, 0xAC, 0x0C, 0x54, 0x00, 0x00, 0x0F, 0xA0,//-12.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x45, 0x00, 0x00, 0x03, 0xA3, 0x0C, 0x5D, 0x00, 0x00, 0x0F, 0xA4,//-11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x31, 0x00, 0x00, 0x03, 0x98, 0x0C, 0x68, 0x00, 0x00, 0x0F, 0xA8,//-10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x1A, 0x00, 0x00, 0x03, 0x8D, 0x0C, 0x73, 0x00, 0x00, 0x0F, 0xAD,//-9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x01, 0x00, 0x00, 0x03, 0x81, 0x0C, 0x7F, 0x00, 0x00, 0x0F, 0xB3,//-8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xE6, 0x00, 0x00, 0x03, 0x73, 0x0C, 0x8D, 0x00, 0x00, 0x0F, 0xB9,//-7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xC8, 0x00, 0x00, 0x03, 0x64, 0x0C, 0x9C, 0x00, 0x00, 0x0F, 0xC0,//-6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xA8, 0x00, 0x00, 0x03, 0x54, 0x0C, 0xAC, 0x00, 0x00, 0x0F, 0xC8,//-5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x84, 0x00, 0x00, 0x03, 0x42, 0x0C, 0xBE, 0x00, 0x00, 0x0F, 0xD0,//-4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x5E, 0x00, 0x00, 0x03, 0x2F, 0x0C, 0xD1, 0x00, 0x00, 0x0F, 0xDA,//-3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x34, 0x00, 0x00, 0x03, 0x1A, 0x0C, 0xE6, 0x00, 0x00, 0x0F, 0xE5,//-2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x07, 0x00, 0x00, 0x03, 0x04, 0x0C, 0xFC, 0x00, 0x00, 0x0F, 0xF2,//-1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD7, 0x00, 0x00, 0x02, 0xEB, 0x0D, 0x15, 0x00, 0x00, 0x0F, 0xFF,//0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x0F,//1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x20,//2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x34,//3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x4A,//4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x63,//5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x7E,//6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x9D,//7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xC0,//8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xE7,//9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x13,//10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x44,//11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x7B//12.0dB
};

const BYTE SAF7741_Treble_12k_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x26,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x06,//<EasyP_Index>
//YA_OFFSET
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x57, 0x00, 0x00, 0x03, 0xAC, 0x0C, 0x54, 0x00, 0x00, 0x0F, 0xA0,//-12.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x45, 0x00, 0x00, 0x03, 0xA2, 0x0C, 0x5E, 0x00, 0x00, 0x0F, 0xA4,//-11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x30, 0x00, 0x00, 0x03, 0x98, 0x0C, 0x68, 0x00, 0x00, 0x0F, 0xA8,//-10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x19, 0x00, 0x00, 0x03, 0x8D, 0x0C, 0x73, 0x00, 0x00, 0x0F, 0xAD,//-9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x80, 0x0C, 0x80, 0x00, 0x00, 0x0F, 0xB3,//-8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xE5, 0x00, 0x00, 0x03, 0x72, 0x0C, 0x8E, 0x00, 0x00, 0x0F, 0xB9,//-7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xC7, 0x00, 0x00, 0x03, 0x63, 0x0C, 0x9D, 0x00, 0x00, 0x0F, 0xC0,//-6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xA6, 0x00, 0x00, 0x03, 0x53, 0x0C, 0xAD, 0x00, 0x00, 0x0F, 0xC8,//-5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x83, 0x00, 0x00, 0x03, 0x41, 0x0C, 0xBF, 0x00, 0x00, 0x0F, 0xD1,//-4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x5C, 0x00, 0x00, 0x03, 0x2E, 0x0C, 0xD2, 0x00, 0x00, 0x0F, 0xDB,//-3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x33, 0x00, 0x00, 0x03, 0x19, 0x0C, 0xE7, 0x00, 0x00, 0x0F, 0xE6,//-2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x06, 0x00, 0x00, 0x03, 0x03, 0x0C, 0xFD, 0x00, 0x00, 0x0F, 0xF2,//-1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x10,//1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x21,//2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x35,//3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x4B,//4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x64,//5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x7F,//6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x9F,//7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xC2,//8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xE9,//9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x15,//10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x46,//11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x7E//12.0dB
};
const BYTE SAF7741_Treble_5000_Data_P[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x04, 0x26,//<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x06,//<EasyP_Index>
//YA_OFFSET
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x57, 0x00, 0x00, 0x03, 0xAC, 0x0C, 0x54, 0x00, 0x00, 0x0F, 0xA0,//-12.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x45, 0x00, 0x00, 0x03, 0xA2, 0x0C, 0x5E, 0x00, 0x00, 0x0F, 0xA4,//-11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x30, 0x00, 0x00, 0x03, 0x98, 0x0C, 0x68, 0x00, 0x00, 0x0F, 0xA8,//-10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x19, 0x00, 0x00, 0x03, 0x8D, 0x0C, 0x73, 0x00, 0x00, 0x0F, 0xAD,//-9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x80, 0x0C, 0x80, 0x00, 0x00, 0x0F, 0xB3,//-8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xE5, 0x00, 0x00, 0x03, 0x72, 0x0C, 0x8E, 0x00, 0x00, 0x0F, 0xB9,//-7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xC7, 0x00, 0x00, 0x03, 0x63, 0x0C, 0x9D, 0x00, 0x00, 0x0F, 0xC0,//-6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0xA6, 0x00, 0x00, 0x03, 0x53, 0x0C, 0xAD, 0x00, 0x00, 0x0F, 0xC8,//-5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x83, 0x00, 0x00, 0x03, 0x41, 0x0C, 0xBF, 0x00, 0x00, 0x0F, 0xD1,//-4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x5C, 0x00, 0x00, 0x03, 0x2E, 0x0C, 0xD2, 0x00, 0x00, 0x0F, 0xDB,//-3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x33, 0x00, 0x00, 0x03, 0x19, 0x0C, 0xE7, 0x00, 0x00, 0x0F, 0xE6,//-2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x02, 0x06, 0x00, 0x00, 0x03, 0x03, 0x0C, 0xFD, 0x00, 0x00, 0x0F, 0xF2,//-1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x00,//0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x10,//1.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x21,//2.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x35,//3.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x4B,//4.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x64,//5.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x7F,//6.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0x9F,//7.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xC2,//8.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x00, 0xE9,//9.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x15,//10.0dB
//0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x46,//11.0dB
0x38, 15, 0x0D, 0x10, 0x00, 0x01, 0xD5, 0x00, 0x00, 0x02, 0xEA, 0x0D, 0x16, 0x00, 0x00, 0x01, 0x7E//12.0dB
};

//<YA_Vol_SrcScalP> 0D 10 2D 2个字节
//<YA_Vol_SrcScalS> 0D 14 86 2个字节
const BYTE SAF7741_InputGain_Data_PS[]={//-59~6转0~65	59为0
////0x00,0x01,
////0x00,0x01,
//0x00,0x01,
////0x00,0x02,
////0x00,0x02,
////0x00,0x02,
//0x00,0x02,
////0x00,0x03,
////0x00,0x03,
//0x00,0x03,
////0x00,0x04,
//0x00,0x04,
////0x00,0x05,
//0x00,0x05,
////0x00,0x06,
//0x00,0x06,
//0x00,0x07,
//0x00,0x08,
//0x00,0x09,
//0x00,0x0A,
//0x00,0x0B,
//0x00,0x0D,
//0x00,0x0E,
//0x00,0x10,
//0x00,0x12,
//0x00,0x14,
//0x00,0x17,
//0x00,0x1A,
//0x00,0x1D,
//0x00,0x20,
//0x00,0x24,
//0x00,0x29,
//0x00,0x2E,
//0x00,0x33,
//0x00,0x3A,
//0x00,0x41,
//0x00,0x48,
//0x00,0x51,
//0x00,0x5B,
//0x00,0x66,
//0x00,0x73,
//0x00,0x81,
//0x00,0x91,
//0x00,0xA2,
//0x00,0xB6,
//0x00,0xCC,
//0x00,0xE5,
//0x01,0x01,
//0x01,0x21,
//0x01,0x44,
//0x01,0x6B,
//0x01,0x98,
//0x01,0xC9,
//0x02,0x01,
0x02,0x40,
0x02,0x86,
0x02,0xD5,
0x03,0x2D,
0x03,0x91,
0x04,0x00,
0x04,0x7D,
0x05,0x09,
0x05,0xA7,
0x06,0x57,
0x07,0x1D,
0x07,0xFB
};

//<YA_Vol_Nav> 0D 10 4E 两个字节
const BYTE SAF7741_InputGain_Data_Mix[]={//混音增益	  1~40有效 当主音量到40，GPRS电话到最大。
//0x0F,0xFE,
0x0F,0xFE,
//0x0F,0xFD,
//0x0F,0xFD,
0x0F,0xFD,
//0x0F,0xFC,
0x0F,0xFC,
//0x0F,0xFB,
0x0F,0xFB,
//0x0F,0xFA,
0x0F,0xFA,
////0x0F,0xF9,
0x0F,0xF8,
////0x0F,0xF7,
0x0F,0xF6,
////0x0F,0xF5,
0x0F,0xF3,
////0x0F,0xF2,
0x0F,0xF0,
////0x0F,0xEE,
0x0F,0xEC,
////0x0F,0xE9,
0x0F,0xE6,
////0x0F,0xE3,
0x0F,0xE0,
////0x0F,0xDC,
0x0F,0xD7,
////0x0F,0xD2,
0x0F,0xCD,
////0x0F,0xC6,
0x0F,0xBF,
0x0F,0xB8,
0x0F,0xAF,
0x0F,0xA5,//bu
0x0F,0x9A,
0x0F,0x8D,
0x0F,0x7F,
0x0F,0x6F,//bu
0x0F,0x5E,
0x0F,0x4A,
0x0F,0x34,
0x0F,0x1B,//bu
0x0E,0xFF,
0x0E,0xDF,
0x0E,0xBC,
0x0E,0x95,//bu
0x0E,0x68,
0x0E,0x37,
0x0D,0xFF,
0x0D,0xC0,//bu
0x0D,0x7A,
0x0D,0x2B,
0x0C,0xD3,
0x0C,0x6F,
0x0C,0x00,
0x0B,0x83,
0x0A,0xF7,
0x0A,0x5A,
0x09,0xA9,
0x08,0xE3,
0x08,0x05,
0x08,0x00,
0x08,0x00, //充数20个
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00, //充数
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00, //充数10个
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00,
0x08,0x00 //充数
};

/*
0x0D,0x10,0xE9,0x08,0x00
0x0D,0x10,0xEC,0x08,0x00
const BYTE SAF7741_InputGain_Data_Mix[]={//混音增益
0x0F,0xFF,//OFF
0x0F,0xFE,//-59dB
0x0F,0xFD,//-58dB
0x0F,0xFD,//-57dB
0x0F,0xFD,//-56dB
0x0F,0xFC,//-55dB
0x0F,0xFC,//-54dB
0x0F,0xFB,//-53dB
0x0F,0xFB,//-52dB
0x0F,0xFA,//-51dB
0x0F,0xFA,//-50dB
0x0F,0xF9,//-49dB
0x0F,0xF8,//-48dB
0x0F,0xF7,//-47dB
0x0F,0xF6,//-46dB
0x0F,0xF4,//-45dB
0x0F,0xF3,//-44dB
0x0F,0xF2,//-43dB
0x0F,0xF0,//-42dB
0x0F,0xEE,//-41dB
0x0F,0xEC,//-40dB
0x0F,0xE9,//-39dB
0x0F,0xE6,//-38dB
0x0F,0xE3,//-37dB
0x0F,0xE0,//-36dB
0x0F,0xDC,//-35dB
0x0F,0xD7,//-34dB
0x0F,0xD2,//-33dB
0x0F,0xCD,//-32dB
0x0F,0xC6,//-31dB
0x0F,0xBF,//-30dB
0x0F,0xB7,//-29dB
0x0F,0xAE,//-28dB
0x0F,0xA5,//-27dB
0x0F,0x99,//-26dB
0x0F,0x8D,//-25dB
0x0F,0x7F,//-24dB
0x0F,0x6F,//-23dB
0x0F,0x5D,//-22dB
0x0F,0x49,//-21dB
0x0F,0x33,//-20dB
0x0F,0x1A,//-19dB
0x0E,0xFE,//-18dB
0x0E,0xDF,//-17dB
0x0E,0xBB,//-16dB
0x0E,0x94,//-15dB
0x0E,0x67,//-14dB
0x0E,0x36,//-13dB
0x0E,0x36,//-13dB
0x0D,0xFE,//-12dB
0x0D,0xBF,//-11dB
0x0D,0x78,//-10dB
0x0D,0x29,//-9dB
0x0C,0xD1,//-8dB
0x0C,0x6D,//-7dB
0x0B,0xFE,//-6dB
0x0B,0x80,//-5dB
0x0A,0xF4,//-4dB
0x0A,0x56,//-3dB
0x09,0xA5,//-2dB
0x08,0xDF,//-1dB
0x08,0x00,//0dB
};
*/

//<YA_Vol_DesScalGEq> 0D 10 7A 2个字节
//每一次更新EQ,
//都要更新DesScalGEq，取9段EQ中增益最大的
const BYTE SAF7741_DesScalGEq_Data[]={
0x07, 0xFF,//0dB
0x07, 0x21,//1.0dB
0x06, 0x5B,//2.0dB
0x05, 0xAA,//3.0dB
0x05, 0x0C,//4.0dB
0x04, 0x80,//5.0dB 
0x04, 0x02,//6.0dB
0x04, 0x00,//7.0dB
0x04, 0x00,//8.0dB
0x04, 0x00,//9.0dB
0x04, 0x00,//10.0dB
0x04, 0x00,//11.0dB
0x04, 0x00//12.0dB
};

/*
Center freq:63
Q shape:1.0
Gain:-12~12
step:1
bank1
*/
const BYTE SAF7741_geq_63[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xA1,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x69, 0x00, 0x00, 0x07,//<EasyP_Index> 
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xCC, 0x00, 0x11, 0x07, 0x98, 0x0C, 0x23, 0x07, 0xC2, 0x07, 0xDB, 0x0E, 0x81,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x67, 0x00, 0x10, 0x00, 0xCF, 0x0C, 0x20, 0x06, 0x8A, 0x07, 0xDF, 0x0E, 0x90,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xA3, 0x00, 0x0E, 0x05, 0x45, 0x0C, 0x1C, 0x02, 0x13, 0x07, 0xE3, 0x0E, 0xA2,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x53, 0x00, 0x0C, 0x04, 0xA6, 0x0C, 0x19, 0x02, 0xB2, 0x07, 0xE6, 0x0E, 0xB6,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x52, 0x00, 0x0B, 0x06, 0xA4, 0x0C, 0x16, 0x00, 0xB4, 0x07, 0xE9, 0x0E, 0xCC,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x7D, 0x00, 0x0A, 0x02, 0xFA, 0x0C, 0x14, 0x04, 0x5E, 0x07, 0xEB, 0x0E, 0xE5,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xB4, 0x00, 0x09, 0x01, 0x69, 0x0C, 0x12, 0x05, 0xEF, 0x07, 0xED, 0x0F, 0x01,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xDC, 0x00, 0x08, 0x01, 0xB9, 0x0C, 0x10, 0x05, 0x9F, 0x07, 0xEF, 0x0F, 0x20,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xDB, 0x00, 0x07, 0x03, 0xB7, 0x0C, 0x0E, 0x03, 0xA1, 0x07, 0xF1, 0x0F, 0x43,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x9B, 0x00, 0x06, 0x07, 0x36, 0x0C, 0x0C, 0x00, 0x22, 0x07, 0xF3, 0x0F, 0x6A,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x06, 0x00, 0x05, 0x04, 0x0D, 0x0C, 0x0B, 0x03, 0x4B, 0x07, 0xF4, 0x0F, 0x97,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x0B, 0x00, 0x05, 0x02, 0x17, 0x0C, 0x0A, 0x05, 0x41, 0x07, 0xF5, 0x0F, 0xC8,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x00, 0x3E,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x00, 0x85,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x00, 0xD3,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x01, 0x2B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x01, 0x8E,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x01, 0xFE,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x02, 0x7A,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x03, 0x06,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x03, 0xA3,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x04, 0x53,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x05, 0x19,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x9A, 0x00, 0x04, 0x01, 0x34, 0x0C, 0x09, 0x06, 0x24, 0x07, 0xF6, 0x05, 0xF6//12.0dB
};
/*
Center freq:125
Q shape:1.0
Gain:-12~12
step:1
bank2
*/
const BYTE SAF7741_geq_125[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xA8, //<SrcSw_OrDigSrcSelMask>
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07, //<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x77, 0x00, 0x23, 0x00, 0xEF, 0x0C, 0x46, 0x04, 0x8E, 0x07, 0xB9, 0x0E, 0x81,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xE6, 0x00, 0x1F, 0x05, 0xCD, 0x0C, 0x3E, 0x07, 0xAE, 0x07, 0xC0, 0x0E, 0x90,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x5D, 0x00, 0x1C, 0x00, 0xBA, 0x0C, 0x38, 0x04, 0xBF, 0x07, 0xC7, 0x0E, 0xA2,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x8F, 0x00, 0x19, 0x01, 0x1F, 0x0C, 0x32, 0x04, 0x58, 0x07, 0xCD, 0x0E, 0xB6,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x3A, 0x00, 0x16, 0x06, 0x74, 0x0C, 0x2C, 0x07, 0x01, 0x07, 0xD2, 0x0E, 0xCC,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x1E, 0x00, 0x14, 0x00, 0x3C, 0x0C, 0x28, 0x05, 0x37, 0x07, 0xD7, 0x0E, 0xE5,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x02, 0x00, 0x11, 0x06, 0x04, 0x0C, 0x23, 0x07, 0x6E, 0x07, 0xDB, 0x0F, 0x01,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xB3, 0x00, 0x0F, 0x07, 0x66, 0x0C, 0x1F, 0x06, 0x0B, 0x07, 0xDF, 0x0F, 0x20,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0x01, 0x00, 0x0E, 0x04, 0x02, 0x0C, 0x1C, 0x01, 0x6D, 0x07, 0xE3, 0x0F, 0x43,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0xC3, 0x00, 0x0C, 0x03, 0x86, 0x0C, 0x19, 0x01, 0xE9, 0x07, 0xE6, 0x0F, 0x6A,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xD1, 0x00, 0x0B, 0x05, 0xA2, 0x0C, 0x16, 0x07, 0xCB, 0x07, 0xE8, 0x0F, 0x97,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x0A, 0x00, 0x0A, 0x02, 0x14, 0x0C, 0x14, 0x03, 0x59, 0x07, 0xEB, 0x0F, 0xC8,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x00, 0x00,//0.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x00, 0x3E,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x00, 0x85,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x00, 0xD3,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x01, 0x2B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x01, 0x8E,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x01, 0xFE,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x02, 0x7A,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x03, 0x06,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x03, 0xA3,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x04, 0x53,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x05, 0x19,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x4E, 0x00, 0x09, 0x00, 0x9B, 0x0C, 0x12, 0x04, 0xD1, 0x07, 0xED, 0x05, 0xF6//12.0dB
};
/*
Center freq:250
Q shape:1.0
Gain:-12~12
step:2
bank3
*/
const BYTE SAF7741_geq_250[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xAF,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x5D, 0x00, 0x43, 0x04, 0xBB, 0x0C, 0x87, 0x01, 0x90, 0x07, 0x77, 0x0E, 0x81,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xE3, 0x00, 0x3C, 0x05, 0xC7, 0x0C, 0x79, 0x00, 0x72, 0x07, 0x85, 0x0E, 0x90,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0xC3, 0x00, 0x36, 0x01, 0x87, 0x0C, 0x6D, 0x04, 0xA2, 0x07, 0x91, 0x0E, 0xA2,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x89, 0x00, 0x30, 0x07, 0x12, 0x0C, 0x61, 0x07, 0x08, 0x07, 0x9C, 0x0E, 0xB6,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xC7, 0x00, 0x2B, 0x05, 0x8F, 0x0C, 0x57, 0x00, 0x7E, 0x07, 0xA7, 0x0E, 0xCC,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0x18, 0x00, 0x27, 0x04, 0x31, 0x0C, 0x4E, 0x01, 0xD0, 0x07, 0xB0, 0x0E, 0xE5,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x1C, 0x00, 0x23, 0x02, 0x38, 0x0C, 0x46, 0x03, 0xBE, 0x07, 0xB8, 0x0F, 0x01,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x7A, 0x00, 0x1F, 0x06, 0xF5, 0x0C, 0x3E, 0x06, 0xF8, 0x07, 0xBF, 0x0F, 0x20,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xE1, 0x00, 0x1C, 0x01, 0xC3, 0x0C, 0x38, 0x04, 0x21, 0x07, 0xC6, 0x0F, 0x43,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x06, 0x00, 0x19, 0x02, 0x0D, 0x0C, 0x32, 0x03, 0xD0, 0x07, 0xCC, 0x0F, 0x6A,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0xA4, 0x00, 0x16, 0x07, 0x49, 0x0C, 0x2C, 0x06, 0x8C, 0x07, 0xD1, 0x0F, 0x97,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x7D, 0x00, 0x14, 0x00, 0xFB, 0x0C, 0x28, 0x04, 0xD4, 0x07, 0xD6, 0x0F, 0xC8,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x00, 0x3E,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x00, 0x85,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x00, 0xD3,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x01, 0x2B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x01, 0x8E,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x01, 0xFE,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x02, 0x7A,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x03, 0x06,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x03, 0xA3,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x04, 0x53,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x05, 0x19,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x57, 0x00, 0x11, 0x06, 0xAF, 0x0C, 0x23, 0x07, 0x1B, 0x07, 0xDA, 0x05, 0xF6//12.0dB
};
/*
Center freq:500
Q shape:1.0
Gain:-12~12
step:1
bank6
*/
const BYTE SAF7741_geq_500[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xB6,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//<EasyP_Index>
//YA_OFFSET
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x7F, 0x0C, 0xFE, 0x06, 0xFD, 0x0E, 0x81,//-12.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x73, 0x0C, 0xE6, 0x07, 0x16, 0x0E, 0x90,//-11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x68, 0x0C, 0xCF, 0x07, 0x2C, 0x0E, 0xA2,//-10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x5D, 0x0C, 0xBB, 0x07, 0x40, 0x0E, 0xB6,//-9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x54, 0x0C, 0xA8, 0x07, 0x53, 0x0E, 0xCC,//-8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x4C, 0x0C, 0x97, 0x07, 0x64, 0x0E, 0xE5,//-7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x73, 0x0F, 0x01,//-6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x3D, 0x0C, 0x7A, 0x07, 0x81, 0x0F, 0x20,//-5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x37, 0x0C, 0x6D, 0x07, 0x8E, 0x0F, 0x43,//-4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x31, 0x0C, 0x62, 0x07, 0x99, 0x0F, 0x6A,//-3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x2C, 0x0C, 0x58, 0x07, 0xA3, 0x0F, 0x97,//-2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x27, 0x0C, 0x4F, 0x07, 0xAC, 0x0F, 0xC8,//-1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x00, 0x00,//0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x00, 0x3E,//1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x00, 0x85,//2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x00, 0xD3,//3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x01, 0x2B,//4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x01, 0x8E,//5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x01, 0xFE,//6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x02, 0x7A,//7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x03, 0x06,//8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x03, 0xA3,//9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x04, 0x53,//10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x05, 0x19,//11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x23, 0x0C, 0x46, 0x07, 0xB5, 0x05, 0xF6//12.0dB
};
/*
Center freq:1000
Q shape:1.0
Gain:-12~12
step:2
bank7
*/
const BYTE SAF7741_geq_1000[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xBA,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//<EasyP_Index>
//YA_OFFSET
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0xE2, 0x0D, 0xC4, 0x06, 0x2B, 0x0E, 0x81,//-12.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0xCF, 0x0D, 0x9D, 0x06, 0x52, 0x0E, 0x90,//-11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0xBC, 0x0D, 0x79, 0x06, 0x77, 0x0E, 0xA2,//-10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0xAB, 0x0D, 0x56, 0x06, 0x98, 0x0E, 0xB6,//-9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x9B, 0x0D, 0x37, 0x06, 0xB8, 0x0E, 0xCC,//-8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x8D, 0x0D, 0x1A, 0x06, 0xD4, 0x0E, 0xE5,//-7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x7F, 0x0C, 0xFF, 0x06, 0xEF, 0x0F, 0x01,//-6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x73, 0x0C, 0xE6, 0x07, 0x07, 0x0F, 0x20,//-5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x68, 0x0C, 0xD0, 0x07, 0x1E, 0x0F, 0x43,//-4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x5E, 0x0C, 0xBB, 0x07, 0x32, 0x0F, 0x6A,//-3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x54, 0x0C, 0xA9, 0x07, 0x44, 0x0F, 0x97,//-2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x4C, 0x0C, 0x98, 0x07, 0x55, 0x0F, 0xC8,//-1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0x00,//0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0x3E,//1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0x85,//2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x00, 0xD3,//3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x01, 0x2B,//4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x01, 0x8E,//5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x01, 0xFE,//6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x02, 0x7A,//7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x03, 0x06,//8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x03, 0xA3,//9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x04, 0x53,//10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x05, 0x19,//11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x00, 0x44, 0x0C, 0x88, 0x07, 0x64, 0x05, 0xF6//12.0dB
};
/*
Center freq:2000
Q shape:1.0
Gain:-12~12
step:1
bank4
*/
const BYTE SAF7741_geq_2K[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xC0,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0xDD, 0x01, 0x72, 0x01, 0xBB, 0x0E, 0xE5, 0x00, 0xB4, 0x04, 0xE6, 0x0E, 0x81,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0xB4, 0x01, 0x57, 0x05, 0x68, 0x0E, 0xAF, 0x03, 0xC1, 0x05, 0x19, 0x0E, 0x90,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0x7B, 0x01, 0x3E, 0x00, 0xF6, 0x0E, 0x7C, 0x07, 0x92, 0x05, 0x4A, 0x0E, 0xA2,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x0C, 0x01, 0x25, 0x06, 0x19, 0x0E, 0x4A, 0x02, 0x82, 0x05, 0x7A, 0x0E, 0xB6,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x14, 0x01, 0x0D, 0x06, 0x29, 0x0E, 0x1B, 0x03, 0x49, 0x05, 0xA7, 0x0E, 0xCC,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x10, 0x00, 0xF7, 0x02, 0x20, 0x0D, 0xEF, 0x00, 0xF7, 0x05, 0xD2, 0x0E, 0xE5,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x50, 0x00, 0xE2, 0x02, 0xA0, 0x0D, 0xC5, 0x02, 0xF0, 0x05, 0xFA, 0x0F, 0x01,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0xFA, 0x00, 0xCE, 0x07, 0xF5, 0x0D, 0x9D, 0x00, 0xEA, 0x06, 0x20, 0x0F, 0x20,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x11, 0x00, 0xBC, 0x02, 0x22, 0x0D, 0x79, 0x02, 0xE4, 0x06, 0x43, 0x0F, 0x43,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0x73, 0x00, 0xAB, 0x00, 0xE7, 0x0D, 0x57, 0x01, 0x1A, 0x06, 0x64, 0x0F, 0x6A,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0xE6, 0x00, 0x9B, 0x03, 0xCB, 0x0D, 0x37, 0x04, 0x01, 0x06, 0x82, 0x0F, 0x97,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x15, 0x00, 0x8D, 0x02, 0x2A, 0x0D, 0x1A, 0x04, 0x37, 0x06, 0x9E, 0x0F, 0xC8,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0x3E,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0x85,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x00, 0xD3,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x01, 0x2B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x01, 0x8E,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x01, 0xFE,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x02, 0x7A,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x03, 0x06,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x03, 0xA3,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x04, 0x53,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x05, 0x19,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x05, 0x9B, 0x00, 0x7F, 0x03, 0x37, 0x0C, 0xFF, 0x02, 0x7F, 0x06, 0xB8, 0x05, 0xF6//12.0dB
};
/*
Center freq:4000
Q shape:1.0
Gain:-12~12
step:1
bank5
*/
const BYTE SAF7741_geq_4K[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xC7,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x07,//<EasyP_Index>
//YA_OFFSET
0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0xF1, 0x02, 0x20, 0x03, 0xE2, 0x00, 0x40, 0x06, 0xED, 0x03, 0x27, 0x0E, 0x81,//-12.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x80, 0x02, 0x02, 0x05, 0x00, 0x00, 0x05, 0x03, 0x64, 0x03, 0x59, 0x0E, 0x90,//-11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xE8, 0x01, 0xE5, 0x05, 0xD1, 0x0F, 0xCA, 0x00, 0x1B, 0x03, 0x8B, 0x0E, 0xA2,//-10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xB8, 0x01, 0xC8, 0x01, 0x71, 0x0F, 0x90, 0x02, 0x74, 0x03, 0xBC, 0x0E, 0xB6,//-9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x75, 0x01, 0xAB, 0x02, 0xEA, 0x0F, 0x56, 0x07, 0xE2, 0x03, 0xEC, 0x0E, 0xCC,//-8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x06, 0x8E, 0x01, 0x8E, 0x05, 0x1D, 0x0F, 0x1D, 0x05, 0xF6, 0x04, 0x1C, 0x0E, 0xE5,//-7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x01, 0x5A, 0x01, 0x73, 0x02, 0xB5, 0x0E, 0xE6, 0x02, 0x72, 0x04, 0x4B, 0x0F, 0x01,//-6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x03, 0x09, 0x01, 0x58, 0x06, 0x13, 0x0E, 0xB0, 0x03, 0x55, 0x04, 0x78, 0x0F, 0x20,//-5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x04, 0xA4, 0x01, 0x3E, 0x01, 0x49, 0x0E, 0x7D, 0x06, 0xE2, 0x04, 0xA3, 0x0F, 0x43,//-4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x07, 0x06, 0x01, 0x25, 0x06, 0x0B, 0x0E, 0x4B, 0x03, 0xA8, 0x04, 0xCD, 0x0F, 0x6A,//-3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x02, 0xDA, 0x01, 0x0E, 0x05, 0xB5, 0x0E, 0x1C, 0x00, 0x84, 0x04, 0xF5, 0x0F, 0x97,//-2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xA0, 0x00, 0xF8, 0x01, 0x41, 0x0D, 0xF0, 0x04, 0xA2, 0x05, 0x1A, 0x0F, 0xC8,//-1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x00, 0x00,//0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x00, 0x3E,//1.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x00, 0x85,//2.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x00, 0xD3,//3.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x01, 0x2B,//4.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x01, 0x8E,//5.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x01, 0xFE,//6.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x02, 0x7A,//7.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x03, 0x06,//8.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x03, 0xA3,//9.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x04, 0x53,//10.0dB
//0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x05, 0x19,//11.0dB
0x38, 17, 0x0D, 0x10, 0x00, 0x00, 0xAA, 0x00, 0xE3, 0x01, 0x53, 0x0D, 0xC6, 0x07, 0x78, 0x05, 0x3D, 0x05, 0xF6//12.0dB
};
/*
Center freq:8000
Q shape:1.0
Gain:-12~12
step:1
bank8
*/
const BYTE SAF7741_geq_8K[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xCE,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//<EasyP_Index>
//YA_OFFSET
0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0xC7, 0x01, 0x8D, 0x01, 0x06, 0x0E, 0x81,//-12.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0xAD, 0x01, 0x5A, 0x01, 0x1B, 0x0E, 0x90,//-11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x93, 0x01, 0x25, 0x01, 0x31, 0x0E, 0xA2,//-10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x77, 0x00, 0xEE, 0x01, 0x48, 0x0E, 0xB6,//-9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x5B, 0x00, 0xB6, 0x01, 0x60, 0x0E, 0xCC,//-8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x3E, 0x00, 0x7C, 0x01, 0x78, 0x0E, 0xE5,//-7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x21, 0x00, 0x42, 0x01, 0x90, 0x0F, 0x01,//-6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x02, 0x03, 0x00, 0x07, 0x01, 0xA9, 0x0F, 0x20,//-5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0xE6, 0x0F, 0xCC, 0x01, 0xC2, 0x0F, 0x43,//-4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0xC9, 0x0F, 0x91, 0x01, 0xDA, 0x0F, 0x6A,//-3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0xAC, 0x0F, 0x58, 0x01, 0xF2, 0x0F, 0x97,//-2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x8F, 0x0F, 0x1F, 0x02, 0x0A, 0x0F, 0xC8,//-1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x00, 0x00,//0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x00, 0x3E,//1.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x00, 0x85,//2.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x00, 0xD3,//3.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x01, 0x2B,//4.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x01, 0x8E,//5.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x01, 0xFE,//6.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x02, 0x7A,//7.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x03, 0x06,//8.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x03, 0xA3,//9.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x04, 0x53,//10.0dB
//0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x05, 0x19,//11.0dB
0x38, 11, 0x0D, 0x10, 0x00, 0x01, 0x74, 0x0E, 0xE7, 0x02, 0x21, 0x05, 0xF6//12.0dB
};
/*
Center freq:16000
Q shape:1.0
Gain:-12~12
step:2
bank9
*/
const BYTE SAF7741_geq_16K[]={ 
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xD2,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x04,//<EasyP_Index>
//YA_OFFSET
0x38,11,0x0D,0x10,0x00,0x03,0x47,0x02,0x8E,0x0F,0x0F,0x0E,0x81,
0x38,11,0x0D,0x10,0x00,0x03,0x21,0x02,0x43,0x0E,0xDE,0x0E,0xA2,
0x38,11,0x0D,0x10,0x00,0x02,0xF6,0x01,0xED,0x0E,0xA6,0x0E,0xCC,
0x38,11,0x0D,0x10,0x00,0x02,0xC7,0x01,0x8E,0x0E,0x68,0x0F,0x01,
0x38,11,0x0D,0x10,0x00,0x02,0x93,0x01,0x26,0x0E,0x24,0x0F,0x44,
0x38,11,0x0D,0x10,0x00,0x02,0x5B,0x00,0xB6,0x0D,0xDC,0x0F,0x97,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x00,0x00,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x00,0x84,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x01,0x2B,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x01,0xFD,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x03,0x06,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x04,0x53,
0x38,11,0x0D,0x10,0x00,0x02,0x21,0x00,0x42,0x0D,0x90,0x05,0xF6
};
const BYTE *SAF7741_geq_freq_sel[]={
SAF7741_geq_63,SAF7741_geq_125,SAF7741_geq_250,SAF7741_geq_500,SAF7741_geq_1000,SAF7741_geq_2K,SAF7741_geq_4K,SAF7741_geq_8K,SAF7741_geq_16K
};

const BYTE SAF7741_subwoofer_80[]={
	0x38,6,0x0D,0x00,0x6E,0x00,0x02,0x0B,//<SrcSw_OrDigSrcSelMask>
	0x38,6,0x0D,0x00,0x6F,0x00,0x00,0x0A,//<EasyP_Index>
	0x38,23,0x0D,0x10,0x00,0x00,0x11,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x11,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0> -12
	//0x38,23,0x0D,0x10,0x00,0x00,0x13,0x00,0x00,0x00,0x26,0x00,0x00,0x00,0x13,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-11
	0x38,23,0x0D,0x10,0x00,0x00,0x15,0x00,0x00,0x00,0x2A,0x00,0x00,0x00,0x15,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-10
	//0x38,23,0x0D,0x10,0x00,0x00,0x18,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x18,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-9
	0x38,23,0x0D,0x10,0x00,0x00,0x1B,0x00,0x00,0x00,0x36,0x00,0x00,0x00,0x1B,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-8
	0x38,23,0x0D,0x10,0x00,0x00,0x1E,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x1E,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-7
	0x38,23,0x0D,0x10,0x00,0x00,0x22,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0x22,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-6
	0x38,23,0x0D,0x10,0x00,0x00,0x26,0x00,0x00,0x00,0x4C,0x00,0x00,0x00,0x26,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-5
	0x38,23,0x0D,0x10,0x00,0x00,0x2A,0x00,0x00,0x00,0x55,0x00,0x00,0x00,0x2A,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-4
	0x38,23,0x0D,0x10,0x00,0x00,0x30,0x00,0x00,0x00,0x5F,0x00,0x00,0x00,0x30,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-3
	//0x38,23,0x0D,0x10,0x00,0x00,0x35,0x00,0x00,0x00,0x6B,0x00,0x00,0x00,0x35,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-2
	0x38,23,0x0D,0x10,0x00,0x00,0x3C,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x3C,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0>-1
	//0x38,23,0x0D,0x10,0x00,0x00,0x43,0x00,0x00,0x00,0x87,0x00,0x00,0x00,0x43,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//<UpdatC_Coeff0> 0
	0x38,23,0x0D,0x10,0x00,0x00,0x4C,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x4C,0x00,0x00,0x03,0xF4,0x07,0xEF,0x02,0xFD,0x0C,0x10,//user add
};

const BYTE SAF7741_subwoofer_160[]={ 
0x38,6,0x0D,0x00,0x6E,0x00,0x02,0x0B,//<SrcSw_OrDigSrcSelMask>
0x38,6,0x0D,0x00,0x6F,0x00,0x00,0x0A,//<EasyP_Index>
0x38,23,0x0D,0x10,0x00,0x00,0x43,0x00,0x00,0x00,0x86,0x00,0x00,0x00,0x43,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0> -12
//0x38,23,0x0D,0x10,0x00,0x00,0x4B,0x00,0x00,0x00,0x97,0x00,0x00,0x00,0x4B,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0x55,0x00,0x00,0x00,0xA9,0x00,0x00,0x00,0x55,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
//0x38,23,0x0D,0x10,0x00,0x00,0x5F,0x00,0x00,0x00,0xBE,0x00,0x00,0x00,0x5F,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0x6A,0x00,0x00,0x00,0xD5,0x00,0x00,0x00,0x6A,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0x78,0x00,0x00,0x00,0xEF,0x00,0x00,0x00,0x78,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0x86,0x00,0x00,0x01,0x0D,0x00,0x00,0x00,0x86,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0x97,0x00,0x00,0x01,0x2D,0x00,0x00,0x00,0x97,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0xA9,0x00,0x00,0x01,0x52,0x00,0x00,0x00,0xA9,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
//0x38,23,0x0D,0x10,0x00,0x00,0xBE,0x00,0x00,0x01,0x7B,0x00,0x00,0x00,0xBE,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
0x38,23,0x0D,0x10,0x00,0x00,0xD5,0x00,0x00,0x01,0xAA,0x00,0x00,0x00,0xD5,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0>
//0x38,23,0x0D,0x10,0x00,0x00,0xEF,0x00,0x00,0x01,0xDE,0x00,0x00,0x00,0xEF,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0> 
0x38,23,0x0D,0x10,0x00,0x01,0x0C,0x00,0x00,0x02,0x18,0x00,0x00,0x01,0x0C,0x00,0x00,0x07,0xEC,0x07,0xDE,0x03,0xE3,0x0C,0x20,//<UpdatC_Coeff0> 0
};

const BYTE SAF7741_subwoofer_120[]={
0x38,6,0x0D,0x00,0x6E,0x00,0x02,0x0B,//<SrcSw_OrDigSrcSelMask>
0x38,6,0x0D,0x00,0x6F,0x00,0x00,0x0A,//<EasyP_Index>
0x38,23,0x0D,0x10,0x00,0x00,0x26,0x00,0x00,0x00,0x4C,0x00,0x00,0x00,0x26,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-12
//0x38,23,0x0D,0x10,0x00,0x00,0x2A,0x00,0x00,0x00,0x55,0x00,0x00,0x00,0x2A,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-11
0x38,23,0x0D,0x10,0x00,0x00,0x30,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x30,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-10
//0x38,23,0x0D,0x10,0x00,0x00,0x35,0x00,0x00,0x00,0x6B,0x00,0x00,0x00,0x35,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-9
0x38,23,0x0D,0x10,0x00,0x00,0x3C,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x3C,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-8
0x38,23,0x0D,0x10,0x00,0x00,0x43,0x00,0x00,0x00,0x87,0x00,0x00,0x00,0x43,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-7
0x38,23,0x0D,0x10,0x00,0x00,0x4C,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x4C,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-6
0x38,23,0x0D,0x10,0x00,0x00,0x55,0x00,0x00,0x00,0xAA,0x00,0x00,0x00,0x55,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-5
0x38,23,0x0D,0x10,0x00,0x00,0x5F,0x00,0x00,0x00,0xBF,0x00,0x00,0x00,0x5F,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-4
//0x38,23,0x0D,0x10,0x00,0x00,0x6B,0x00,0x00,0x00,0xD6,0x00,0x00,0x00,0x6B,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-3
0x38,23,0x0D,0x10,0x00,0x00,0x78,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x78,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-2
//0x38,23,0x0D,0x10,0x00,0x00,0x87,0x00,0x00,0x01,0x0E,0x00,0x00,0x00,0x87,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>-1
0x38,23,0x0D,0x10,0x00,0x00,0x97,0x00,0x00,0x01,0x2F,0x00,0x00,0x00,0x97,0x00,0x00,0x01,0xEF,0x07,0xE7,0x03,0xB3,0x0C,0x18,//<UpdatC_Coeff0>0
};

const BYTE SAF7741_Loud_Data[]={
0x00,0x00,//<Loudf_MaxBstB> 0dB
0x00,0x1F,//<Loudf_MaxBstB> 1dB
0x00,0x42,//<Loudf_MaxBstB> 2dB
0x00,0x6A,//<Loudf_MaxBstB> 3dB
0x00,0x96,//<Loudf_MaxBstB> 4dB
0x00,0xC7,//<Loudf_MaxBstB> 5dB
0x00,0xFF,//<Loudf_MaxBstB> 6dB
0x01,0x3D,//<Loudf_MaxBstB> 7dB
0x01,0x83,//<Loudf_MaxBstB> 8dB
0x01,0xD2,//<Loudf_MaxBstB> 9dB
0x02,0x2A,//<Loudf_MaxBstB> 10dB
0x02,0x8C,//<Loudf_MaxBstB> 11dB
0x02,0xFB,//<Loudf_MaxBstB> 12dB
};

const BYTE SAF7741_Loud_Freq[]={
0x38, 6, 0x0D, 0x00, 0x6E, 0x00, 0x02, 0xEB,//<SrcSw_OrDigSrcSelMask> 
0x38, 6, 0x0D, 0x00, 0x6F, 0x00, 0x00, 0x08,//<EasyP_Index>
//YA_OFFSET
0x38, 19, 0x0D, 0x10, 0x00, 0x07, 0xA0, 0x03, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x00,//FLAT90
0x38, 19, 0x0D, 0x10, 0x00, 0x02, 0x4F, 0x03, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x05, 0xB1, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,//400
0x38, 19, 0x0D, 0x10, 0x00, 0x06, 0x6B, 0x03, 0x91, 0x00, 0x00, 0x00, 0x00, 0x01, 0x95, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x00//800
};

const BYTE audioChannelGainTab[17]={//0~16
0,//Init
0,//MediaCD
0,//CDC
5,//RADIO
1,//AUX
1,//IPOD
4,//TV
1,//MediaMP3
1,//SRADIO
1,//A2DP
0,//EXT_TEL
0,//GR_AUDIO
6,//BT
0,//BACK
0,//GPS
0,
0};

BYTE delay_not[]={
//Delay1=0ms,(Front Left Speaker)
0x38, 6, 0x0D, 0x05, 0x62, 0x00, 0x00, 0x01,//XA_Delay_Length1_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay2=0ms,(Front Right Speaker)
0x38, 6, 0x0D, 0x05, 0x63, 0x00, 0x00, 0x01,//XA_Delay_Length2_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay3=0ms,(Rear Left Speaker)
0x38, 6, 0x0D, 0x05, 0x64, 0x00, 0x00, 0x01,//XA_Delay_Length3_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay4=0ms,(Rear Right Speaker)
0x38, 6, 0x0D, 0x05, 0x65, 0x00, 0x00, 0x01,//XA_Delay_Length4_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0
};

BYTE delay_pos1[]={
//Delay1=4.1ms
0x38, 6, 0x0D, 0x05, 0x62, 0x00, 0x00, 0xB6,//XA_Delay_Length1_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay2=1.2ms
0x38, 6, 0x0D, 0x05, 0x63, 0x00, 0x00, 0x36,//XA_Delay_Length2_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay3=1.2ms
0x38, 6, 0x0D, 0x05, 0x64, 0x00, 0x00, 0x36,//XA_Delay_Length3_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay4=0ms
0x38, 6, 0x0D, 0x05, 0x65, 0x00, 0x00, 0x01,//XA_Delay_Length4_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0
};

BYTE delay_pos2[]={
//Delay1=1.2ms
0x38, 6, 0x0D, 0x05, 0x62, 0x00, 0x00, 0x36,//XA_Delay_Length1_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay2=4.1ms
0x38, 6, 0x0D, 0x05, 0x63, 0x00, 0x00, 0xB6,//XA_Delay_Length2_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay3=0ms
0x38, 6, 0x0D, 0x05, 0x64, 0x00, 0x00, 0x01,//XA_Delay_Length3_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay4=1.2ms
0x38, 6, 0x0D, 0x05, 0x65, 0x00, 0x00, 0x36,//XA_Delay_Length4_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0
};
const BYTE delay_pos3[]={
//Delay1=1.2ms
0x38, 6, 0x0D, 0x05, 0x62, 0x00, 0x00, 0x36,//XA_Delay_Length1_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay2=0ms
0x38, 6, 0x0D, 0x05, 0x63, 0x00, 0x00, 0x01,//XA_Delay_Length2_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay3=4.1ms
0x38, 6, 0x0D, 0x05, 0x64, 0x00, 0x00, 0xB6,//XA_Delay_Length3_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag

//Delay4=1.2ms
0x38, 6, 0x0D, 0x05, 0x65, 0x00, 0x00, 0x36,//XA_Delay_Length4_In
0x38, 6, 0x0D, 0x05, 0x68, 0x7F, 0xFF, 0xFF,//XA_Delay_InitFlag
0
};
const BYTE delay_pos4[]={
//Delay1=0ms, L1=1, X:Delay_Length1_In=0x000001
0x38,6,0x0D,0x04,0x56,0x00,0x00,0x01,
0x38,6,0x0D,0x04,0x5C,0x7F,0xFF,0xFF,
//Delay2=1.2ms, L2=53,  X:Delay_Length2_In=0x000035
0x38,6,0x0D,0x04,0x57,0x00,0x00,0x35,
0x38,6,0x0D,0x04,0x5C,0x7F,0xFF,0xFF,
//Delay3=1.2ms, L3=53,  X:Delay_Length3_In=0x000035
0x38,6,0x0D,0x04,0x58,0x00,0x00,0x35,
0x38,6,0x0D,0x04,0x5C,0x7F,0xFF,0xFF,
//Delay4=4.1ms, L4=181,  X:Delay_Length4_In=0x0000B5
0x38,6,0x0D,0x04,0x59,0x00,0x00,0xB5,
0x38,6,0x0D,0x04,0x5C,0x7F,0xFF,0xFF,
0
};

#ifdef __cplusplus
}
#endif

#endif// __SAF7741_DATA_H__
